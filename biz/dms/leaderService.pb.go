// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: leaderService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Leader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	DistributorId   int64   `protobuf:"varint,2,opt,name=distributor_id,json=distributorId,proto3" json:"distributor_id"`
	RankId          int64   `protobuf:"varint,3,opt,name=rank_id,json=rankId,proto3" json:"rank_id"`
	CustomerId      int64   `protobuf:"varint,25,opt,name=customer_id,json=customerId,proto3" json:"customer_id"`
	TeamCount       int32   `protobuf:"varint,4,opt,name=team_count,json=teamCount,proto3" json:"team_count"`
	Bonus           float32 `protobuf:"fixed32,5,opt,name=bonus,proto3" json:"bonus"`
	TotalBonus      float32 `protobuf:"fixed32,6,opt,name=total_bonus,json=totalBonus,proto3" json:"total_bonus"`
	ApplyBonus      float32 `protobuf:"fixed32,7,opt,name=apply_bonus,json=applyBonus,proto3" json:"apply_bonus"`
	WaitSettleBonus float32 `protobuf:"fixed32,8,opt,name=wait_settle_bonus,json=waitSettleBonus,proto3" json:"wait_settle_bonus"`
	WaitGrantBonus  float32 `protobuf:"fixed32,9,opt,name=wait_grant_bonus,json=waitGrantBonus,proto3" json:"wait_grant_bonus"`
	FrozenBonus     float32 `protobuf:"fixed32,10,opt,name=frozen_bonus,json=frozenBonus,proto3" json:"frozen_bonus"`
	WithdrewBonus   float32 `protobuf:"fixed32,11,opt,name=withdrew_bonus,json=withdrewBonus,proto3" json:"withdrew_bonus"`
	WithdrewNum     int32   `protobuf:"varint,12,opt,name=withdrew_num,json=withdrewNum,proto3" json:"withdrew_num"`
	CreatedAt       string  `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt       string  `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	// @inject_tag: gorm:"-"
	Ids         []int64      `protobuf:"varint,15,rep,packed,name=ids,proto3" json:"ids" gorm:"-"`
	Rank        *Rank        `protobuf:"bytes,16,opt,name=rank,proto3" json:"rank"`
	Distributor *Distributor `protobuf:"bytes,17,opt,name=distributor,proto3" json:"distributor"`
	LeaderName  string       `protobuf:"bytes,18,opt,name=leader_name,json=leaderName,proto3" json:"leader_name"` // 团长昵称
	Mobile      string       `protobuf:"bytes,19,opt,name=mobile,proto3" json:"mobile"`                           // 手机号
	AvatarUrl   string       `protobuf:"bytes,20,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url"`    // 用户头像
	RankName    string       `protobuf:"bytes,21,opt,name=rank_name,json=rankName,proto3" json:"rank_name"`       // 等级名称
	Status      int32        `protobuf:"varint,22,opt,name=status,proto3" json:"status"`
}

func (x *Leader) Reset() {
	*x = Leader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leaderService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Leader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Leader) ProtoMessage() {}

func (x *Leader) ProtoReflect() protoreflect.Message {
	mi := &file_leaderService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Leader.ProtoReflect.Descriptor instead.
func (*Leader) Descriptor() ([]byte, []int) {
	return file_leaderService_proto_rawDescGZIP(), []int{0}
}

func (x *Leader) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Leader) GetDistributorId() int64 {
	if x != nil {
		return x.DistributorId
	}
	return 0
}

func (x *Leader) GetRankId() int64 {
	if x != nil {
		return x.RankId
	}
	return 0
}

func (x *Leader) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *Leader) GetTeamCount() int32 {
	if x != nil {
		return x.TeamCount
	}
	return 0
}

func (x *Leader) GetBonus() float32 {
	if x != nil {
		return x.Bonus
	}
	return 0
}

func (x *Leader) GetTotalBonus() float32 {
	if x != nil {
		return x.TotalBonus
	}
	return 0
}

func (x *Leader) GetApplyBonus() float32 {
	if x != nil {
		return x.ApplyBonus
	}
	return 0
}

func (x *Leader) GetWaitSettleBonus() float32 {
	if x != nil {
		return x.WaitSettleBonus
	}
	return 0
}

func (x *Leader) GetWaitGrantBonus() float32 {
	if x != nil {
		return x.WaitGrantBonus
	}
	return 0
}

func (x *Leader) GetFrozenBonus() float32 {
	if x != nil {
		return x.FrozenBonus
	}
	return 0
}

func (x *Leader) GetWithdrewBonus() float32 {
	if x != nil {
		return x.WithdrewBonus
	}
	return 0
}

func (x *Leader) GetWithdrewNum() int32 {
	if x != nil {
		return x.WithdrewNum
	}
	return 0
}

func (x *Leader) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Leader) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Leader) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *Leader) GetRank() *Rank {
	if x != nil {
		return x.Rank
	}
	return nil
}

func (x *Leader) GetDistributor() *Distributor {
	if x != nil {
		return x.Distributor
	}
	return nil
}

func (x *Leader) GetLeaderName() string {
	if x != nil {
		return x.LeaderName
	}
	return ""
}

func (x *Leader) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *Leader) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Leader) GetRankName() string {
	if x != nil {
		return x.RankName
	}
	return ""
}

func (x *Leader) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type LeaderWhere struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int32  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Sorting  string `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting"`
	Mobile   string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile"`
	RankId   int32  `protobuf:"varint,5,opt,name=rank_id,json=rankId,proto3" json:"rank_id"`
	Keywords string `protobuf:"bytes,6,opt,name=keywords,proto3" json:"keywords"`
	Id       int64  `protobuf:"varint,7,opt,name=id,proto3" json:"id"`
	// @inject_tag: gorm:"-"
	Ids           []int64 `protobuf:"varint,8,rep,packed,name=ids,proto3" json:"ids"`
	DistributorId int64   `protobuf:"varint,9,opt,name=distributor_id,json=distributorId,proto3" json:"distributor_id"`
	CustomerId    int64   `protobuf:"varint,10,opt,name=customer_id,json=customerId,proto3" json:"customer_id"`
	Status        int32   `protobuf:"varint,11,opt,name=status,proto3" json:"status"`
}

func (x *LeaderWhere) Reset() {
	*x = LeaderWhere{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leaderService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderWhere) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderWhere) ProtoMessage() {}

func (x *LeaderWhere) ProtoReflect() protoreflect.Message {
	mi := &file_leaderService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderWhere.ProtoReflect.Descriptor instead.
func (*LeaderWhere) Descriptor() ([]byte, []int) {
	return file_leaderService_proto_rawDescGZIP(), []int{1}
}

func (x *LeaderWhere) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *LeaderWhere) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *LeaderWhere) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *LeaderWhere) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *LeaderWhere) GetRankId() int32 {
	if x != nil {
		return x.RankId
	}
	return 0
}

func (x *LeaderWhere) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *LeaderWhere) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LeaderWhere) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *LeaderWhere) GetDistributorId() int64 {
	if x != nil {
		return x.DistributorId
	}
	return 0
}

func (x *LeaderWhere) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *LeaderWhere) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type LeaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Leader       `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*Leader     `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Error  *common.Error `protobuf:"bytes,4,opt,name=error,proto3" json:"error"`
	Info   *common.Info  `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *LeaderResponse) Reset() {
	*x = LeaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_leaderService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderResponse) ProtoMessage() {}

func (x *LeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_leaderService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderResponse.ProtoReflect.Descriptor instead.
func (*LeaderResponse) Descriptor() ([]byte, []int) {
	return file_leaderService_proto_rawDescGZIP(), []int{2}
}

func (x *LeaderResponse) GetEntity() *Leader {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *LeaderResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *LeaderResponse) GetItems() []*Leader {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *LeaderResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *LeaderResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_leaderService_proto protoreflect.FileDescriptor

var file_leaderService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x18, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x72, 0x61,
	0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xed, 0x05, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x74, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x62, 0x6f, 0x6e, 0x75, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x77,
	0x61, 0x69, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x28,
	0x0a, 0x10, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x5f, 0x62, 0x6f, 0x6e,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x77, 0x61, 0x69, 0x74, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x7a,
	0x65, 0x6e, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b,
	0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x65, 0x77, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0d, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x65, 0x77, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x65, 0x77, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x65, 0x77, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52,
	0x61, 0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x37, 0x0a, 0x0b, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61,
	0x6e, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xa9, 0x02, 0x0a, 0x0b, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x57, 0x68, 0x65, 0x72, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xce, 0x01, 0x0a, 0x0e,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x26, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0x83, 0x01, 0x0a,
	0x0f, 0x4d, 0x79, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x33, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12,
	0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x32, 0x81, 0x01, 0x0a, 0x0d, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x10, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a, 0x18, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_leaderService_proto_rawDescOnce sync.Once
	file_leaderService_proto_rawDescData = file_leaderService_proto_rawDesc
)

func file_leaderService_proto_rawDescGZIP() []byte {
	file_leaderService_proto_rawDescOnce.Do(func() {
		file_leaderService_proto_rawDescData = protoimpl.X.CompressGZIP(file_leaderService_proto_rawDescData)
	})
	return file_leaderService_proto_rawDescData
}

var file_leaderService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_leaderService_proto_goTypes = []interface{}{
	(*Leader)(nil),         // 0: services.Leader
	(*LeaderWhere)(nil),    // 1: services.LeaderWhere
	(*LeaderResponse)(nil), // 2: services.LeaderResponse
	(*Rank)(nil),           // 3: services.Rank
	(*Distributor)(nil),    // 4: services.Distributor
	(*common.Pager)(nil),   // 5: common.Pager
	(*common.Error)(nil),   // 6: common.Error
	(*common.Info)(nil),    // 7: common.Info
}
var file_leaderService_proto_depIdxs = []int32{
	3,  // 0: services.Leader.rank:type_name -> services.Rank
	4,  // 1: services.Leader.distributor:type_name -> services.Distributor
	0,  // 2: services.LeaderResponse.entity:type_name -> services.Leader
	5,  // 3: services.LeaderResponse.pager:type_name -> common.Pager
	0,  // 4: services.LeaderResponse.items:type_name -> services.Leader
	6,  // 5: services.LeaderResponse.error:type_name -> common.Error
	7,  // 6: services.LeaderResponse.info:type_name -> common.Info
	0,  // 7: services.MyLeaderService.Get:input_type -> services.Leader
	1,  // 8: services.MyLeaderService.Exists:input_type -> services.LeaderWhere
	0,  // 9: services.LeaderService.Get:input_type -> services.Leader
	1,  // 10: services.LeaderService.Search:input_type -> services.LeaderWhere
	2,  // 11: services.MyLeaderService.Get:output_type -> services.LeaderResponse
	2,  // 12: services.MyLeaderService.Exists:output_type -> services.LeaderResponse
	2,  // 13: services.LeaderService.Get:output_type -> services.LeaderResponse
	2,  // 14: services.LeaderService.Search:output_type -> services.LeaderResponse
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_leaderService_proto_init() }
func file_leaderService_proto_init() {
	if File_leaderService_proto != nil {
		return
	}
	file_distributorService_proto_init()
	file_rankService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_leaderService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Leader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leaderService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderWhere); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_leaderService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_leaderService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_leaderService_proto_goTypes,
		DependencyIndexes: file_leaderService_proto_depIdxs,
		MessageInfos:      file_leaderService_proto_msgTypes,
	}.Build()
	File_leaderService_proto = out.File
	file_leaderService_proto_rawDesc = nil
	file_leaderService_proto_goTypes = nil
	file_leaderService_proto_depIdxs = nil
}
