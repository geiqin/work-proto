// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: posterGalleryService.proto

package services

import (
	fmt "fmt"
	_ "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for PosterGalleryService service

func NewPosterGalleryServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for PosterGalleryService service

type PosterGalleryService interface {
	Add(ctx context.Context, in *PosterGallery, opts ...client.CallOption) (*PosterGalleryResponse, error)
	Delete(ctx context.Context, in *PosterGalleryWhere, opts ...client.CallOption) (*PosterGalleryResponse, error)
	DeleteAll(ctx context.Context, in *PosterGalleryWhere, opts ...client.CallOption) (*PosterGalleryResponse, error)
	Search(ctx context.Context, in *PosterGalleryWhere, opts ...client.CallOption) (*PosterGalleryResponse, error)
	List(ctx context.Context, in *PosterGalleryWhere, opts ...client.CallOption) (*PosterGalleryResponse, error)
}

type posterGalleryService struct {
	c    client.Client
	name string
}

func NewPosterGalleryService(name string, c client.Client) PosterGalleryService {
	return &posterGalleryService{
		c:    c,
		name: name,
	}
}

func (c *posterGalleryService) Add(ctx context.Context, in *PosterGallery, opts ...client.CallOption) (*PosterGalleryResponse, error) {
	req := c.c.NewRequest(c.name, "PosterGalleryService.Add", in)
	out := new(PosterGalleryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posterGalleryService) Delete(ctx context.Context, in *PosterGalleryWhere, opts ...client.CallOption) (*PosterGalleryResponse, error) {
	req := c.c.NewRequest(c.name, "PosterGalleryService.Delete", in)
	out := new(PosterGalleryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posterGalleryService) DeleteAll(ctx context.Context, in *PosterGalleryWhere, opts ...client.CallOption) (*PosterGalleryResponse, error) {
	req := c.c.NewRequest(c.name, "PosterGalleryService.DeleteAll", in)
	out := new(PosterGalleryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posterGalleryService) Search(ctx context.Context, in *PosterGalleryWhere, opts ...client.CallOption) (*PosterGalleryResponse, error) {
	req := c.c.NewRequest(c.name, "PosterGalleryService.Search", in)
	out := new(PosterGalleryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *posterGalleryService) List(ctx context.Context, in *PosterGalleryWhere, opts ...client.CallOption) (*PosterGalleryResponse, error) {
	req := c.c.NewRequest(c.name, "PosterGalleryService.List", in)
	out := new(PosterGalleryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PosterGalleryService service

type PosterGalleryServiceHandler interface {
	Add(context.Context, *PosterGallery, *PosterGalleryResponse) error
	Delete(context.Context, *PosterGalleryWhere, *PosterGalleryResponse) error
	DeleteAll(context.Context, *PosterGalleryWhere, *PosterGalleryResponse) error
	Search(context.Context, *PosterGalleryWhere, *PosterGalleryResponse) error
	List(context.Context, *PosterGalleryWhere, *PosterGalleryResponse) error
}

func RegisterPosterGalleryServiceHandler(s server.Server, hdlr PosterGalleryServiceHandler, opts ...server.HandlerOption) error {
	type posterGalleryService interface {
		Add(ctx context.Context, in *PosterGallery, out *PosterGalleryResponse) error
		Delete(ctx context.Context, in *PosterGalleryWhere, out *PosterGalleryResponse) error
		DeleteAll(ctx context.Context, in *PosterGalleryWhere, out *PosterGalleryResponse) error
		Search(ctx context.Context, in *PosterGalleryWhere, out *PosterGalleryResponse) error
		List(ctx context.Context, in *PosterGalleryWhere, out *PosterGalleryResponse) error
	}
	type PosterGalleryService struct {
		posterGalleryService
	}
	h := &posterGalleryServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&PosterGalleryService{h}, opts...))
}

type posterGalleryServiceHandler struct {
	PosterGalleryServiceHandler
}

func (h *posterGalleryServiceHandler) Add(ctx context.Context, in *PosterGallery, out *PosterGalleryResponse) error {
	return h.PosterGalleryServiceHandler.Add(ctx, in, out)
}

func (h *posterGalleryServiceHandler) Delete(ctx context.Context, in *PosterGalleryWhere, out *PosterGalleryResponse) error {
	return h.PosterGalleryServiceHandler.Delete(ctx, in, out)
}

func (h *posterGalleryServiceHandler) DeleteAll(ctx context.Context, in *PosterGalleryWhere, out *PosterGalleryResponse) error {
	return h.PosterGalleryServiceHandler.DeleteAll(ctx, in, out)
}

func (h *posterGalleryServiceHandler) Search(ctx context.Context, in *PosterGalleryWhere, out *PosterGalleryResponse) error {
	return h.PosterGalleryServiceHandler.Search(ctx, in, out)
}

func (h *posterGalleryServiceHandler) List(ctx context.Context, in *PosterGalleryWhere, out *PosterGalleryResponse) error {
	return h.PosterGalleryServiceHandler.List(ctx, in, out)
}

// Api Endpoints for FrontPosterGalleryService service

func NewFrontPosterGalleryServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for FrontPosterGalleryService service

type FrontPosterGalleryService interface {
	Search(ctx context.Context, in *PosterGalleryWhere, opts ...client.CallOption) (*PosterGalleryResponse, error)
	List(ctx context.Context, in *PosterGalleryWhere, opts ...client.CallOption) (*PosterGalleryResponse, error)
}

type frontPosterGalleryService struct {
	c    client.Client
	name string
}

func NewFrontPosterGalleryService(name string, c client.Client) FrontPosterGalleryService {
	return &frontPosterGalleryService{
		c:    c,
		name: name,
	}
}

func (c *frontPosterGalleryService) Search(ctx context.Context, in *PosterGalleryWhere, opts ...client.CallOption) (*PosterGalleryResponse, error) {
	req := c.c.NewRequest(c.name, "FrontPosterGalleryService.Search", in)
	out := new(PosterGalleryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontPosterGalleryService) List(ctx context.Context, in *PosterGalleryWhere, opts ...client.CallOption) (*PosterGalleryResponse, error) {
	req := c.c.NewRequest(c.name, "FrontPosterGalleryService.List", in)
	out := new(PosterGalleryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for FrontPosterGalleryService service

type FrontPosterGalleryServiceHandler interface {
	Search(context.Context, *PosterGalleryWhere, *PosterGalleryResponse) error
	List(context.Context, *PosterGalleryWhere, *PosterGalleryResponse) error
}

func RegisterFrontPosterGalleryServiceHandler(s server.Server, hdlr FrontPosterGalleryServiceHandler, opts ...server.HandlerOption) error {
	type frontPosterGalleryService interface {
		Search(ctx context.Context, in *PosterGalleryWhere, out *PosterGalleryResponse) error
		List(ctx context.Context, in *PosterGalleryWhere, out *PosterGalleryResponse) error
	}
	type FrontPosterGalleryService struct {
		frontPosterGalleryService
	}
	h := &frontPosterGalleryServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&FrontPosterGalleryService{h}, opts...))
}

type frontPosterGalleryServiceHandler struct {
	FrontPosterGalleryServiceHandler
}

func (h *frontPosterGalleryServiceHandler) Search(ctx context.Context, in *PosterGalleryWhere, out *PosterGalleryResponse) error {
	return h.FrontPosterGalleryServiceHandler.Search(ctx, in, out)
}

func (h *frontPosterGalleryServiceHandler) List(ctx context.Context, in *PosterGalleryWhere, out *PosterGalleryResponse) error {
	return h.FrontPosterGalleryServiceHandler.List(ctx, in, out)
}
