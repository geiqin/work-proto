// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: positionService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Title         string      `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	EnterpriseId  int64       `protobuf:"varint,3,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id"`
	WorkType      int32       `protobuf:"varint,4,opt,name=work_type,json=workType,proto3" json:"work_type"`
	BasicSalary   float32     `protobuf:"fixed32,5,opt,name=basic_salary,json=basicSalary,proto3" json:"basic_salary"`
	HourPrice     float32     `protobuf:"fixed32,6,opt,name=hour_price,json=hourPrice,proto3" json:"hour_price"`
	CostPrice     float32     `protobuf:"fixed32,7,opt,name=cost_price,json=costPrice,proto3" json:"cost_price"`
	SalaryMin     int32       `protobuf:"varint,8,opt,name=salary_min,json=salaryMin,proto3" json:"salary_min"`
	SalaryMax     int32       `protobuf:"varint,9,opt,name=salary_max,json=salaryMax,proto3" json:"salary_max"`
	Number        int32       `protobuf:"varint,10,opt,name=number,proto3" json:"number"`
	SeekerNum     int32       `protobuf:"varint,11,opt,name=seeker_num,json=seekerNum,proto3" json:"seeker_num"`
	Intro         string      `protobuf:"bytes,12,opt,name=intro,proto3" json:"intro"`
	SalaryDesc    string      `protobuf:"bytes,13,opt,name=salary_desc,json=salaryDesc,proto3" json:"salary_desc"`
	EntryDesc     string      `protobuf:"bytes,14,opt,name=entry_desc,json=entryDesc,proto3" json:"entry_desc"`
	Sorting       int32       `protobuf:"varint,15,opt,name=sorting,proto3" json:"sorting"`
	State         int32       `protobuf:"varint,16,opt,name=state,proto3" json:"state"`
	JobIntro      string      `protobuf:"bytes,17,opt,name=job_intro,json=jobIntro,proto3" json:"job_intro"`
	Accommodation string      `protobuf:"bytes,18,opt,name=accommodation,proto3" json:"accommodation"`
	CreatedAt     string      `protobuf:"bytes,19,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt     string      `protobuf:"bytes,20,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Enterprise    *Enterprise `protobuf:"bytes,21,opt,name=enterprise,proto3" json:"enterprise"`
	// @inject_tag: gorm:"many2many:position_tags;"
	Tags []*Tag `protobuf:"bytes,22,rep,name=tags,proto3" gorm:"many2many:position_tags;" json:"tags"`
	// @inject_tag: gorm:"many2many:position_cats;"
	Cats []*Cat `protobuf:"bytes,23,rep,name=cats,proto3"  gorm:"many2many:position_cats;" json:"cats"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_positionService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_positionService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_positionService_proto_rawDescGZIP(), []int{0}
}

func (x *Position) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Position) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Position) GetEnterpriseId() int64 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *Position) GetWorkType() int32 {
	if x != nil {
		return x.WorkType
	}
	return 0
}

func (x *Position) GetBasicSalary() float32 {
	if x != nil {
		return x.BasicSalary
	}
	return 0
}

func (x *Position) GetHourPrice() float32 {
	if x != nil {
		return x.HourPrice
	}
	return 0
}

func (x *Position) GetCostPrice() float32 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *Position) GetSalaryMin() int32 {
	if x != nil {
		return x.SalaryMin
	}
	return 0
}

func (x *Position) GetSalaryMax() int32 {
	if x != nil {
		return x.SalaryMax
	}
	return 0
}

func (x *Position) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Position) GetSeekerNum() int32 {
	if x != nil {
		return x.SeekerNum
	}
	return 0
}

func (x *Position) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *Position) GetSalaryDesc() string {
	if x != nil {
		return x.SalaryDesc
	}
	return ""
}

func (x *Position) GetEntryDesc() string {
	if x != nil {
		return x.EntryDesc
	}
	return ""
}

func (x *Position) GetSorting() int32 {
	if x != nil {
		return x.Sorting
	}
	return 0
}

func (x *Position) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Position) GetJobIntro() string {
	if x != nil {
		return x.JobIntro
	}
	return ""
}

func (x *Position) GetAccommodation() string {
	if x != nil {
		return x.Accommodation
	}
	return ""
}

func (x *Position) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Position) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Position) GetEnterprise() *Enterprise {
	if x != nil {
		return x.Enterprise
	}
	return nil
}

func (x *Position) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Position) GetCats() []*Cat {
	if x != nil {
		return x.Cats
	}
	return nil
}

//标签查询参数
type PositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int32  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Sorting  string `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting"`
	//以下为自定义参数
	Title        string  `protobuf:"bytes,4,opt,name=title,proto3" json:"title"`
	EnterpriseId int64   `protobuf:"varint,5,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id"`
	WorkType     int32   `protobuf:"varint,6,opt,name=work_type,json=workType,proto3" json:"work_type"`
	HourPrice    float32 `protobuf:"fixed32,7,opt,name=hour_price,json=hourPrice,proto3" json:"hour_price"`
	State        int32   `protobuf:"varint,8,opt,name=state,proto3" json:"state"`
	CatId        int32   `protobuf:"varint,9,opt,name=cat_id,json=catId,proto3" json:"cat_id"`
	CatSlug      string  `protobuf:"bytes,10,opt,name=cat_slug,json=catSlug,proto3" json:"cat_slug"`
	TagId        int32   `protobuf:"varint,11,opt,name=tag_id,json=tagId,proto3" json:"tag_id"`
	TagSlug      string  `protobuf:"bytes,12,opt,name=tag_slug,json=tagSlug,proto3" json:"tag_slug"`
}

func (x *PositionRequest) Reset() {
	*x = PositionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_positionService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionRequest) ProtoMessage() {}

func (x *PositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_positionService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionRequest.ProtoReflect.Descriptor instead.
func (*PositionRequest) Descriptor() ([]byte, []int) {
	return file_positionService_proto_rawDescGZIP(), []int{1}
}

func (x *PositionRequest) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *PositionRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PositionRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *PositionRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PositionRequest) GetEnterpriseId() int64 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *PositionRequest) GetWorkType() int32 {
	if x != nil {
		return x.WorkType
	}
	return 0
}

func (x *PositionRequest) GetHourPrice() float32 {
	if x != nil {
		return x.HourPrice
	}
	return 0
}

func (x *PositionRequest) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *PositionRequest) GetCatId() int32 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *PositionRequest) GetCatSlug() string {
	if x != nil {
		return x.CatSlug
	}
	return ""
}

func (x *PositionRequest) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *PositionRequest) GetTagSlug() string {
	if x != nil {
		return x.TagSlug
	}
	return ""
}

//
type PositionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Position     `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*Position   `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Error  *common.Error `protobuf:"bytes,4,opt,name=error,proto3" json:"error"`
	Info   *common.Info  `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *PositionResponse) Reset() {
	*x = PositionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_positionService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionResponse) ProtoMessage() {}

func (x *PositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_positionService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionResponse.ProtoReflect.Descriptor instead.
func (*PositionResponse) Descriptor() ([]byte, []int) {
	return file_positionService_proto_rawDescGZIP(), []int{2}
}

func (x *PositionResponse) GetEntity() *Position {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *PositionResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *PositionResponse) GetItems() []*Position {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PositionResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *PositionResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_positionService_proto protoreflect.FileDescriptor

var file_positionService_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x74,
	0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x10, 0x63, 0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xcb, 0x05, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x6f,
	0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x75,
	0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x68,
	0x6f, 0x75, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x63, 0x6f,
	0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x4d, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79,
	0x5f, 0x6d, 0x61, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x61,
	0x72, 0x79, 0x4d, 0x61, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x65, 0x6b, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x73, 0x65, 0x65, 0x6b, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x44,
	0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x12,
	0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x52, 0x0a, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x04,
	0x63, 0x61, 0x74, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x74, 0x52, 0x04, 0x63, 0x61, 0x74, 0x73, 0x22,
	0xcf, 0x02, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x75, 0x72,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x68, 0x6f,
	0x75, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x63, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x61, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x5f, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x74, 0x53, 0x6c, 0x75, 0x67, 0x12,
	0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x6c,
	0x75, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x53, 0x6c, 0x75,
	0x67, 0x22, 0xd4, 0x01, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0xc1, 0x02, 0x0a, 0x0f, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x12,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x37, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x06, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a,
	0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_positionService_proto_rawDescOnce sync.Once
	file_positionService_proto_rawDescData = file_positionService_proto_rawDesc
)

func file_positionService_proto_rawDescGZIP() []byte {
	file_positionService_proto_rawDescOnce.Do(func() {
		file_positionService_proto_rawDescData = protoimpl.X.CompressGZIP(file_positionService_proto_rawDescData)
	})
	return file_positionService_proto_rawDescData
}

var file_positionService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_positionService_proto_goTypes = []interface{}{
	(*Position)(nil),         // 0: services.Position
	(*PositionRequest)(nil),  // 1: services.PositionRequest
	(*PositionResponse)(nil), // 2: services.PositionResponse
	(*Enterprise)(nil),       // 3: services.Enterprise
	(*Tag)(nil),              // 4: services.Tag
	(*Cat)(nil),              // 5: services.Cat
	(*common.Pager)(nil),     // 6: common.Pager
	(*common.Error)(nil),     // 7: common.Error
	(*common.Info)(nil),      // 8: common.Info
}
var file_positionService_proto_depIdxs = []int32{
	3,  // 0: services.Position.enterprise:type_name -> services.Enterprise
	4,  // 1: services.Position.tags:type_name -> services.Tag
	5,  // 2: services.Position.cats:type_name -> services.Cat
	0,  // 3: services.PositionResponse.entity:type_name -> services.Position
	6,  // 4: services.PositionResponse.pager:type_name -> common.Pager
	0,  // 5: services.PositionResponse.items:type_name -> services.Position
	7,  // 6: services.PositionResponse.error:type_name -> common.Error
	8,  // 7: services.PositionResponse.info:type_name -> common.Info
	0,  // 8: services.PositionService.Create:input_type -> services.Position
	0,  // 9: services.PositionService.Update:input_type -> services.Position
	0,  // 10: services.PositionService.Delete:input_type -> services.Position
	0,  // 11: services.PositionService.Get:input_type -> services.Position
	1,  // 12: services.PositionService.Search:input_type -> services.PositionRequest
	2,  // 13: services.PositionService.Create:output_type -> services.PositionResponse
	2,  // 14: services.PositionService.Update:output_type -> services.PositionResponse
	2,  // 15: services.PositionService.Delete:output_type -> services.PositionResponse
	2,  // 16: services.PositionService.Get:output_type -> services.PositionResponse
	2,  // 17: services.PositionService.Search:output_type -> services.PositionResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_positionService_proto_init() }
func file_positionService_proto_init() {
	if File_positionService_proto != nil {
		return
	}
	file_enterpriseService_proto_init()
	file_tagService_proto_init()
	file_catService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_positionService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_positionService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_positionService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_positionService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_positionService_proto_goTypes,
		DependencyIndexes: file_positionService_proto_depIdxs,
		MessageInfos:      file_positionService_proto_msgTypes,
	}.Build()
	File_positionService_proto = out.File
	file_positionService_proto_rawDesc = nil
	file_positionService_proto_goTypes = nil
	file_positionService_proto_depIdxs = nil
}
