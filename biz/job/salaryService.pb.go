// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: salaryService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Salary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	InductionId      int64      `protobuf:"varint,2,opt,name=induction_id,json=inductionId,proto3" json:"induction_id"`
	EnterpriseId     int64      `protobuf:"varint,3,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id"`
	DeptName         string     `protobuf:"bytes,4,opt,name=dept_name,json=deptName,proto3" json:"dept_name"`
	JobName          string     `protobuf:"bytes,5,opt,name=job_name,json=jobName,proto3" json:"job_name"`
	Year             int32      `protobuf:"varint,6,opt,name=year,proto3" json:"year"`
	Month            int32      `protobuf:"varint,7,opt,name=month,proto3" json:"month"`
	WorkType         int64      `protobuf:"varint,8,opt,name=work_type,json=workType,proto3" json:"work_type"`
	BasicSalary      float32    `protobuf:"fixed32,9,opt,name=basic_salary,json=basicSalary,proto3" json:"basic_salary"`
	HourPrice        float32    `protobuf:"fixed32,10,opt,name=hour_price,json=hourPrice,proto3" json:"hour_price"`
	CostPrice        float32    `protobuf:"fixed32,11,opt,name=cost_price,json=costPrice,proto3" json:"cost_price"`
	BaseHours        float32    `protobuf:"fixed32,12,opt,name=base_hours,json=baseHours,proto3" json:"base_hours"`
	ExtraHours       float32    `protobuf:"fixed32,13,opt,name=extra_hours,json=extraHours,proto3" json:"extra_hours"`
	ExtraTwiceHours  float32    `protobuf:"fixed32,14,opt,name=extra_twice_hours,json=extraTwiceHours,proto3" json:"extra_twice_hours"`
	ExtraTripleHours float32    `protobuf:"fixed32,15,opt,name=extra_triple_hours,json=extraTripleHours,proto3" json:"extra_triple_hours"`
	BaseMoney        float32    `protobuf:"fixed32,16,opt,name=base_money,json=baseMoney,proto3" json:"base_money"`
	ExtraMoney       float32    `protobuf:"fixed32,17,opt,name=extra_money,json=extraMoney,proto3" json:"extra_money"`
	ExtraTwiceMoney  float32    `protobuf:"fixed32,18,opt,name=extra_twice_money,json=extraTwiceMoney,proto3" json:"extra_twice_money"`
	ExtraTripleMoney float32    `protobuf:"fixed32,19,opt,name=extra_triple_money,json=extraTripleMoney,proto3" json:"extra_triple_money"`
	CutTaxFee        float32    `protobuf:"fixed32,20,opt,name=cut_tax_fee,json=cutTaxFee,proto3" json:"cut_tax_fee"`
	CutLoanFee       float32    `protobuf:"fixed32,21,opt,name=cut_loan_fee,json=cutLoanFee,proto3" json:"cut_loan_fee"`
	CutOtherFee      float32    `protobuf:"fixed32,22,opt,name=cut_other_fee,json=cutOtherFee,proto3" json:"cut_other_fee"`
	TotalMoney       float32    `protobuf:"fixed32,23,opt,name=total_money,json=totalMoney,proto3" json:"total_money"`
	TotalFee         float32    `protobuf:"fixed32,24,opt,name=total_fee,json=totalFee,proto3" json:"total_fee"`
	PayableMoney     float32    `protobuf:"fixed32,25,opt,name=payable_money,json=payableMoney,proto3" json:"payable_money"`
	Paid             bool       `protobuf:"varint,26,opt,name=paid,proto3" json:"paid"`
	PaidAt           string     `protobuf:"bytes,27,opt,name=paid_at,json=paidAt,proto3" json:"paid_at"`
	State            int32      `protobuf:"varint,28,opt,name=state,proto3" json:"state"`
	Memo             string     `protobuf:"bytes,29,opt,name=memo,proto3" json:"memo"`
	CreatedAt        string     `protobuf:"bytes,30,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt        string     `protobuf:"bytes,31,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Induction        *Induction `protobuf:"bytes,32,opt,name=induction,proto3" json:"induction"`
}

func (x *Salary) Reset() {
	*x = Salary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_salaryService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Salary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Salary) ProtoMessage() {}

func (x *Salary) ProtoReflect() protoreflect.Message {
	mi := &file_salaryService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Salary.ProtoReflect.Descriptor instead.
func (*Salary) Descriptor() ([]byte, []int) {
	return file_salaryService_proto_rawDescGZIP(), []int{0}
}

func (x *Salary) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Salary) GetInductionId() int64 {
	if x != nil {
		return x.InductionId
	}
	return 0
}

func (x *Salary) GetEnterpriseId() int64 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *Salary) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *Salary) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *Salary) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Salary) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *Salary) GetWorkType() int64 {
	if x != nil {
		return x.WorkType
	}
	return 0
}

func (x *Salary) GetBasicSalary() float32 {
	if x != nil {
		return x.BasicSalary
	}
	return 0
}

func (x *Salary) GetHourPrice() float32 {
	if x != nil {
		return x.HourPrice
	}
	return 0
}

func (x *Salary) GetCostPrice() float32 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *Salary) GetBaseHours() float32 {
	if x != nil {
		return x.BaseHours
	}
	return 0
}

func (x *Salary) GetExtraHours() float32 {
	if x != nil {
		return x.ExtraHours
	}
	return 0
}

func (x *Salary) GetExtraTwiceHours() float32 {
	if x != nil {
		return x.ExtraTwiceHours
	}
	return 0
}

func (x *Salary) GetExtraTripleHours() float32 {
	if x != nil {
		return x.ExtraTripleHours
	}
	return 0
}

func (x *Salary) GetBaseMoney() float32 {
	if x != nil {
		return x.BaseMoney
	}
	return 0
}

func (x *Salary) GetExtraMoney() float32 {
	if x != nil {
		return x.ExtraMoney
	}
	return 0
}

func (x *Salary) GetExtraTwiceMoney() float32 {
	if x != nil {
		return x.ExtraTwiceMoney
	}
	return 0
}

func (x *Salary) GetExtraTripleMoney() float32 {
	if x != nil {
		return x.ExtraTripleMoney
	}
	return 0
}

func (x *Salary) GetCutTaxFee() float32 {
	if x != nil {
		return x.CutTaxFee
	}
	return 0
}

func (x *Salary) GetCutLoanFee() float32 {
	if x != nil {
		return x.CutLoanFee
	}
	return 0
}

func (x *Salary) GetCutOtherFee() float32 {
	if x != nil {
		return x.CutOtherFee
	}
	return 0
}

func (x *Salary) GetTotalMoney() float32 {
	if x != nil {
		return x.TotalMoney
	}
	return 0
}

func (x *Salary) GetTotalFee() float32 {
	if x != nil {
		return x.TotalFee
	}
	return 0
}

func (x *Salary) GetPayableMoney() float32 {
	if x != nil {
		return x.PayableMoney
	}
	return 0
}

func (x *Salary) GetPaid() bool {
	if x != nil {
		return x.Paid
	}
	return false
}

func (x *Salary) GetPaidAt() string {
	if x != nil {
		return x.PaidAt
	}
	return ""
}

func (x *Salary) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *Salary) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *Salary) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Salary) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Salary) GetInduction() *Induction {
	if x != nil {
		return x.Induction
	}
	return nil
}

//标签查询参数
type SalaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int32  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Sorting  string `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting"`
	//以下为自定义参数
	InductionId  int64  `protobuf:"varint,4,opt,name=induction_id,json=inductionId,proto3" json:"induction_id"`
	EnterpriseId int64  `protobuf:"varint,5,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id"`
	DeptName     string `protobuf:"bytes,6,opt,name=dept_name,json=deptName,proto3" json:"dept_name"`
	JobName      string `protobuf:"bytes,7,opt,name=job_name,json=jobName,proto3" json:"job_name"`
	Year         int32  `protobuf:"varint,8,opt,name=year,proto3" json:"year"`
	Month        int32  `protobuf:"varint,9,opt,name=month,proto3" json:"month"`
	WorkType     int64  `protobuf:"varint,10,opt,name=work_type,json=workType,proto3" json:"work_type"`
}

func (x *SalaryRequest) Reset() {
	*x = SalaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_salaryService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalaryRequest) ProtoMessage() {}

func (x *SalaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_salaryService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalaryRequest.ProtoReflect.Descriptor instead.
func (*SalaryRequest) Descriptor() ([]byte, []int) {
	return file_salaryService_proto_rawDescGZIP(), []int{1}
}

func (x *SalaryRequest) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *SalaryRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SalaryRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *SalaryRequest) GetInductionId() int64 {
	if x != nil {
		return x.InductionId
	}
	return 0
}

func (x *SalaryRequest) GetEnterpriseId() int64 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *SalaryRequest) GetDeptName() string {
	if x != nil {
		return x.DeptName
	}
	return ""
}

func (x *SalaryRequest) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *SalaryRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *SalaryRequest) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *SalaryRequest) GetWorkType() int64 {
	if x != nil {
		return x.WorkType
	}
	return 0
}

//
type SalaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Salary       `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*Salary     `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Error  *common.Error `protobuf:"bytes,4,opt,name=error,proto3" json:"error"`
	Info   *common.Info  `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *SalaryResponse) Reset() {
	*x = SalaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_salaryService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SalaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SalaryResponse) ProtoMessage() {}

func (x *SalaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_salaryService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SalaryResponse.ProtoReflect.Descriptor instead.
func (*SalaryResponse) Descriptor() ([]byte, []int) {
	return file_salaryService_proto_rawDescGZIP(), []int{2}
}

func (x *SalaryResponse) GetEntity() *Salary {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *SalaryResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *SalaryResponse) GetItems() []*Salary {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SalaryResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SalaryResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_salaryService_proto protoreflect.FileDescriptor

var file_salaryService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x16, 0x69, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x08, 0x0a, 0x06, 0x53,
	0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x65, 0x70, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f,
	0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f,
	0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12,
	0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x69, 0x63, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x68, 0x6f, 0x75, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x68, 0x6f, 0x75, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x2a, 0x0a,
	0x11, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x74, 0x77, 0x69, 0x63, 0x65, 0x5f, 0x68, 0x6f, 0x75,
	0x72, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x54,
	0x77, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x5f, 0x74, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x65, 0x78, 0x74, 0x72, 0x61, 0x54, 0x72, 0x69, 0x70,
	0x6c, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x62, 0x61, 0x73,
	0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x5f, 0x74, 0x77, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x54, 0x77, 0x69, 0x63, 0x65, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x74, 0x72, 0x69,
	0x70, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x10, 0x65, 0x78, 0x74, 0x72, 0x61, 0x54, 0x72, 0x69, 0x70, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x75, 0x74, 0x5f, 0x74, 0x61, 0x78, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x63, 0x75, 0x74, 0x54, 0x61, 0x78, 0x46, 0x65,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x75, 0x74, 0x5f, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x75, 0x74, 0x4c, 0x6f, 0x61, 0x6e,
	0x46, 0x65, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x75, 0x74, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x63, 0x75, 0x74, 0x4f,
	0x74, 0x68, 0x65, 0x72, 0x46, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x46, 0x65, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x70, 0x61,
	0x79, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x69, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x69, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x31, 0x0a, 0x09, 0x69, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xa3, 0x02, 0x0a, 0x0d, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x70,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x0e, 0x53, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x06, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0xe2, 0x02, 0x0a, 0x0d, 0x53, 0x61,
	0x6c, 0x61, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x1a,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x05, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x36, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x1a, 0x18,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x6c,
	0x61, 0x72, 0x79, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3d, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61,
	0x6c, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c,
	0x5a, 0x0a, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_salaryService_proto_rawDescOnce sync.Once
	file_salaryService_proto_rawDescData = file_salaryService_proto_rawDesc
)

func file_salaryService_proto_rawDescGZIP() []byte {
	file_salaryService_proto_rawDescOnce.Do(func() {
		file_salaryService_proto_rawDescData = protoimpl.X.CompressGZIP(file_salaryService_proto_rawDescData)
	})
	return file_salaryService_proto_rawDescData
}

var file_salaryService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_salaryService_proto_goTypes = []interface{}{
	(*Salary)(nil),         // 0: services.Salary
	(*SalaryRequest)(nil),  // 1: services.SalaryRequest
	(*SalaryResponse)(nil), // 2: services.SalaryResponse
	(*Induction)(nil),      // 3: services.Induction
	(*common.Pager)(nil),   // 4: common.Pager
	(*common.Error)(nil),   // 5: common.Error
	(*common.Info)(nil),    // 6: common.Info
}
var file_salaryService_proto_depIdxs = []int32{
	3,  // 0: services.Salary.induction:type_name -> services.Induction
	0,  // 1: services.SalaryResponse.entity:type_name -> services.Salary
	4,  // 2: services.SalaryResponse.pager:type_name -> common.Pager
	0,  // 3: services.SalaryResponse.items:type_name -> services.Salary
	5,  // 4: services.SalaryResponse.error:type_name -> common.Error
	6,  // 5: services.SalaryResponse.info:type_name -> common.Info
	0,  // 6: services.SalaryService.Create:input_type -> services.Salary
	0,  // 7: services.SalaryService.Update:input_type -> services.Salary
	0,  // 8: services.SalaryService.Check:input_type -> services.Salary
	0,  // 9: services.SalaryService.Delete:input_type -> services.Salary
	0,  // 10: services.SalaryService.Get:input_type -> services.Salary
	1,  // 11: services.SalaryService.Search:input_type -> services.SalaryRequest
	2,  // 12: services.SalaryService.Create:output_type -> services.SalaryResponse
	2,  // 13: services.SalaryService.Update:output_type -> services.SalaryResponse
	2,  // 14: services.SalaryService.Check:output_type -> services.SalaryResponse
	2,  // 15: services.SalaryService.Delete:output_type -> services.SalaryResponse
	2,  // 16: services.SalaryService.Get:output_type -> services.SalaryResponse
	2,  // 17: services.SalaryService.Search:output_type -> services.SalaryResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_salaryService_proto_init() }
func file_salaryService_proto_init() {
	if File_salaryService_proto != nil {
		return
	}
	file_inductionService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_salaryService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Salary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_salaryService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_salaryService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SalaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_salaryService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_salaryService_proto_goTypes,
		DependencyIndexes: file_salaryService_proto_depIdxs,
		MessageInfos:      file_salaryService_proto_msgTypes,
	}.Build()
	File_salaryService_proto = out.File
	file_salaryService_proto_rawDesc = nil
	file_salaryService_proto_goTypes = nil
	file_salaryService_proto_depIdxs = nil
}
