// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: extendsService.proto

package services

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//课程商品（知识付费）
type CourseExtend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ItemId       int64  `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	Author       string `protobuf:"bytes,3,opt,name=author,proto3" json:"author"`
	MediaType    int32  `protobuf:"varint,4,opt,name=media_type,json=mediaType,proto3" json:"media_type"`
	MediaId      int64  `protobuf:"varint,5,opt,name=media_id,json=mediaId,proto3" json:"media_id"`
	MediaUrl     string `protobuf:"bytes,6,opt,name=media_url,json=mediaUrl,proto3" json:"media_url"`
	TryMediaId   int64  `protobuf:"varint,7,opt,name=try_media_id,json=tryMediaId,proto3" json:"try_media_id"`
	TryMediaUrl  string `protobuf:"bytes,8,opt,name=try_media_url,json=tryMediaUrl,proto3" json:"try_media_url"`
	ImageText    string `protobuf:"bytes,9,opt,name=image_text,json=imageText,proto3" json:"image_text"`
	TryImageText string `protobuf:"bytes,10,opt,name=try_image_text,json=tryImageText,proto3" json:"try_image_text"`
	SaleMode     int32  `protobuf:"varint,11,opt,name=sale_mode,json=saleMode,proto3" json:"sale_mode"`
	DownloadHash string `protobuf:"bytes,12,opt,name=download_hash,json=downloadHash,proto3" json:"download_hash"`
	TextbookId   int32  `protobuf:"varint,13,opt,name=textbook_id,json=textbookId,proto3" json:"textbook_id"`
}

func (x *CourseExtend) Reset() {
	*x = CourseExtend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extendsService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseExtend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseExtend) ProtoMessage() {}

func (x *CourseExtend) ProtoReflect() protoreflect.Message {
	mi := &file_extendsService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseExtend.ProtoReflect.Descriptor instead.
func (*CourseExtend) Descriptor() ([]byte, []int) {
	return file_extendsService_proto_rawDescGZIP(), []int{0}
}

func (x *CourseExtend) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CourseExtend) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *CourseExtend) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CourseExtend) GetMediaType() int32 {
	if x != nil {
		return x.MediaType
	}
	return 0
}

func (x *CourseExtend) GetMediaId() int64 {
	if x != nil {
		return x.MediaId
	}
	return 0
}

func (x *CourseExtend) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

func (x *CourseExtend) GetTryMediaId() int64 {
	if x != nil {
		return x.TryMediaId
	}
	return 0
}

func (x *CourseExtend) GetTryMediaUrl() string {
	if x != nil {
		return x.TryMediaUrl
	}
	return ""
}

func (x *CourseExtend) GetImageText() string {
	if x != nil {
		return x.ImageText
	}
	return ""
}

func (x *CourseExtend) GetTryImageText() string {
	if x != nil {
		return x.TryImageText
	}
	return ""
}

func (x *CourseExtend) GetSaleMode() int32 {
	if x != nil {
		return x.SaleMode
	}
	return 0
}

func (x *CourseExtend) GetDownloadHash() string {
	if x != nil {
		return x.DownloadHash
	}
	return ""
}

func (x *CourseExtend) GetTextbookId() int32 {
	if x != nil {
		return x.TextbookId
	}
	return 0
}

//专栏商品（知识付费）
type ColumnExtend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ItemId         int64  `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	Author         string `protobuf:"bytes,3,opt,name=author,proto3" json:"author"`
	ColumnExtendId int64  `protobuf:"varint,4,opt,name=column_extend_id,json=columnExtendId,proto3" json:"column_extend_id"`
	CourseCount    int32  `protobuf:"varint,5,opt,name=course_count,json=courseCount,proto3" json:"course_count"`
	// @inject_tag: gorm:"many2many:column_course_extends;"
	Courses  []*CourseExtend `protobuf:"bytes,6,rep,name=courses,proto3" gorm:"many2many:column_course_extends;" json:"courses"`
	Children []*ColumnExtend `protobuf:"bytes,7,rep,name=children,proto3" json:"children"`
}

func (x *ColumnExtend) Reset() {
	*x = ColumnExtend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extendsService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnExtend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnExtend) ProtoMessage() {}

func (x *ColumnExtend) ProtoReflect() protoreflect.Message {
	mi := &file_extendsService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnExtend.ProtoReflect.Descriptor instead.
func (*ColumnExtend) Descriptor() ([]byte, []int) {
	return file_extendsService_proto_rawDescGZIP(), []int{1}
}

func (x *ColumnExtend) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ColumnExtend) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ColumnExtend) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ColumnExtend) GetColumnExtendId() int64 {
	if x != nil {
		return x.ColumnExtendId
	}
	return 0
}

func (x *ColumnExtend) GetCourseCount() int32 {
	if x != nil {
		return x.CourseCount
	}
	return 0
}

func (x *ColumnExtend) GetCourses() []*CourseExtend {
	if x != nil {
		return x.Courses
	}
	return nil
}

func (x *ColumnExtend) GetChildren() []*ColumnExtend {
	if x != nil {
		return x.Children
	}
	return nil
}

//票劵商品扩展属性
type TicketExtend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ItemId               int64   `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	ProviderId           int64   `protobuf:"varint,3,opt,name=provider_id,json=providerId,proto3" json:"provider_id"`
	PreferentialType     int32   `protobuf:"varint,4,opt,name=preferential_type,json=preferentialType,proto3" json:"preferential_type"`
	PreferentialMoney    float32 `protobuf:"fixed32,5,opt,name=preferential_money,json=preferentialMoney,proto3" json:"preferential_money"`
	PreferentialDiscount float32 `protobuf:"fixed32,6,opt,name=preferential_discount,json=preferentialDiscount,proto3" json:"preferential_discount"`
	IsSyncWx             bool    `protobuf:"varint,7,opt,name=is_sync_wx,json=isSyncWx,proto3" json:"is_sync_wx"`
	WxTitle              string  `protobuf:"bytes,8,opt,name=wx_title,json=wxTitle,proto3" json:"wx_title"`
	WxSubtitle           string  `protobuf:"bytes,9,opt,name=wx_subtitle,json=wxSubtitle,proto3" json:"wx_subtitle"`
	WxColor              string  `protobuf:"bytes,10,opt,name=wx_color,json=wxColor,proto3" json:"wx_color"`
	Status               int32   `protobuf:"varint,11,opt,name=status,proto3" json:"status"`
	ValidType            string  `protobuf:"bytes,12,opt,name=valid_type,json=validType,proto3" json:"valid_type"`
	ValidDays            int32   `protobuf:"varint,13,opt,name=valid_days,json=validDays,proto3" json:"valid_days"`
	ValidStartAt         string  `protobuf:"bytes,14,opt,name=valid_start_at,json=validStartAt,proto3" json:"valid_start_at"`
	ValidEndAt           string  `protobuf:"bytes,15,opt,name=valid_end_at,json=validEndAt,proto3" json:"valid_end_at"`
}

func (x *TicketExtend) Reset() {
	*x = TicketExtend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extendsService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TicketExtend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TicketExtend) ProtoMessage() {}

func (x *TicketExtend) ProtoReflect() protoreflect.Message {
	mi := &file_extendsService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TicketExtend.ProtoReflect.Descriptor instead.
func (*TicketExtend) Descriptor() ([]byte, []int) {
	return file_extendsService_proto_rawDescGZIP(), []int{2}
}

func (x *TicketExtend) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TicketExtend) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *TicketExtend) GetProviderId() int64 {
	if x != nil {
		return x.ProviderId
	}
	return 0
}

func (x *TicketExtend) GetPreferentialType() int32 {
	if x != nil {
		return x.PreferentialType
	}
	return 0
}

func (x *TicketExtend) GetPreferentialMoney() float32 {
	if x != nil {
		return x.PreferentialMoney
	}
	return 0
}

func (x *TicketExtend) GetPreferentialDiscount() float32 {
	if x != nil {
		return x.PreferentialDiscount
	}
	return 0
}

func (x *TicketExtend) GetIsSyncWx() bool {
	if x != nil {
		return x.IsSyncWx
	}
	return false
}

func (x *TicketExtend) GetWxTitle() string {
	if x != nil {
		return x.WxTitle
	}
	return ""
}

func (x *TicketExtend) GetWxSubtitle() string {
	if x != nil {
		return x.WxSubtitle
	}
	return ""
}

func (x *TicketExtend) GetWxColor() string {
	if x != nil {
		return x.WxColor
	}
	return ""
}

func (x *TicketExtend) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TicketExtend) GetValidType() string {
	if x != nil {
		return x.ValidType
	}
	return ""
}

func (x *TicketExtend) GetValidDays() int32 {
	if x != nil {
		return x.ValidDays
	}
	return 0
}

func (x *TicketExtend) GetValidStartAt() string {
	if x != nil {
		return x.ValidStartAt
	}
	return ""
}

func (x *TicketExtend) GetValidEndAt() string {
	if x != nil {
		return x.ValidEndAt
	}
	return ""
}

//会员套餐商品扩展属性
type VipExtend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ItemId      int64  `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	VipLevelId  int32  `protobuf:"varint,3,opt,name=vip_level_id,json=vipLevelId,proto3" json:"vip_level_id"`
	KeepType    string `protobuf:"bytes,4,opt,name=keep_type,json=keepType,proto3" json:"keep_type"`
	KeepValue   int32  `protobuf:"varint,5,opt,name=keep_value,json=keepValue,proto3" json:"keep_value"`
	IsTeam      bool   `protobuf:"varint,6,opt,name=is_team,json=isTeam,proto3" json:"is_team"`
	LimitNumber int32  `protobuf:"varint,7,opt,name=limit_number,json=limitNumber,proto3" json:"limit_number"`
}

func (x *VipExtend) Reset() {
	*x = VipExtend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extendsService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipExtend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipExtend) ProtoMessage() {}

func (x *VipExtend) ProtoReflect() protoreflect.Message {
	mi := &file_extendsService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipExtend.ProtoReflect.Descriptor instead.
func (*VipExtend) Descriptor() ([]byte, []int) {
	return file_extendsService_proto_rawDescGZIP(), []int{3}
}

func (x *VipExtend) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VipExtend) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *VipExtend) GetVipLevelId() int32 {
	if x != nil {
		return x.VipLevelId
	}
	return 0
}

func (x *VipExtend) GetKeepType() string {
	if x != nil {
		return x.KeepType
	}
	return ""
}

func (x *VipExtend) GetKeepValue() int32 {
	if x != nil {
		return x.KeepValue
	}
	return 0
}

func (x *VipExtend) GetIsTeam() bool {
	if x != nil {
		return x.IsTeam
	}
	return false
}

func (x *VipExtend) GetLimitNumber() int32 {
	if x != nil {
		return x.LimitNumber
	}
	return 0
}

//充值套餐商品扩展属性
type RechargeExtend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ItemId    int64   `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	Channel   string  `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel"`
	Condition int32   `protobuf:"varint,4,opt,name=condition,proto3" json:"condition"`
	GiveMoney float32 `protobuf:"fixed32,5,opt,name=give_money,json=giveMoney,proto3" json:"give_money"`
	GiveScore int32   `protobuf:"varint,6,opt,name=give_score,json=giveScore,proto3" json:"give_score"`
}

func (x *RechargeExtend) Reset() {
	*x = RechargeExtend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extendsService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RechargeExtend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RechargeExtend) ProtoMessage() {}

func (x *RechargeExtend) ProtoReflect() protoreflect.Message {
	mi := &file_extendsService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RechargeExtend.ProtoReflect.Descriptor instead.
func (*RechargeExtend) Descriptor() ([]byte, []int) {
	return file_extendsService_proto_rawDescGZIP(), []int{4}
}

func (x *RechargeExtend) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RechargeExtend) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *RechargeExtend) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *RechargeExtend) GetCondition() int32 {
	if x != nil {
		return x.Condition
	}
	return 0
}

func (x *RechargeExtend) GetGiveMoney() float32 {
	if x != nil {
		return x.GiveMoney
	}
	return 0
}

func (x *RechargeExtend) GetGiveScore() int32 {
	if x != nil {
		return x.GiveScore
	}
	return 0
}

//美食商品扩展属性
type FoodExtend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ItemId int64 `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id"`
}

func (x *FoodExtend) Reset() {
	*x = FoodExtend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extendsService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FoodExtend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FoodExtend) ProtoMessage() {}

func (x *FoodExtend) ProtoReflect() protoreflect.Message {
	mi := &file_extendsService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FoodExtend.ProtoReflect.Descriptor instead.
func (*FoodExtend) Descriptor() ([]byte, []int) {
	return file_extendsService_proto_rawDescGZIP(), []int{5}
}

func (x *FoodExtend) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FoodExtend) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

//客房商品扩展属性
type RoomExtend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ItemId int64 `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id"`
}

func (x *RoomExtend) Reset() {
	*x = RoomExtend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_extendsService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomExtend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomExtend) ProtoMessage() {}

func (x *RoomExtend) ProtoReflect() protoreflect.Message {
	mi := &file_extendsService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomExtend.ProtoReflect.Descriptor instead.
func (*RoomExtend) Descriptor() ([]byte, []int) {
	return file_extendsService_proto_rawDescGZIP(), []int{6}
}

func (x *RoomExtend) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoomExtend) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

var File_extendsService_proto protoreflect.FileDescriptor

var file_extendsService_proto_rawDesc = []byte{
	0x0a, 0x14, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x22, 0x94, 0x03, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x72, 0x79,
	0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x74,
	0x72, 0x79, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x24,
	0x0a, 0x0e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x61, 0x6c, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x62, 0x6f,
	0x6f, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x65, 0x78,
	0x74, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x64, 0x22, 0x82, 0x02, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xfc, 0x03, 0x0a,
	0x0c, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x14, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73,
	0x79, 0x6e, 0x63, 0x5f, 0x77, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x53, 0x79, 0x6e, 0x63, 0x57, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x78, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x78, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x78, 0x5f, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x78, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x78, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x78, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x64, 0x61,
	0x79, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44,
	0x61, 0x79, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x09,
	0x56, 0x69, 0x70, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x76, 0x69, 0x70, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x69, 0x70, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x65, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xaf, 0x01, 0x0a,
	0x0e, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x67, 0x69, 0x76, 0x65, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x67, 0x69, 0x76, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x35,
	0x0a, 0x0a, 0x46, 0x6f, 0x6f, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x0a, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x42, 0x0c, 0x5a, 0x0a,
	0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_extendsService_proto_rawDescOnce sync.Once
	file_extendsService_proto_rawDescData = file_extendsService_proto_rawDesc
)

func file_extendsService_proto_rawDescGZIP() []byte {
	file_extendsService_proto_rawDescOnce.Do(func() {
		file_extendsService_proto_rawDescData = protoimpl.X.CompressGZIP(file_extendsService_proto_rawDescData)
	})
	return file_extendsService_proto_rawDescData
}

var file_extendsService_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_extendsService_proto_goTypes = []interface{}{
	(*CourseExtend)(nil),   // 0: services.CourseExtend
	(*ColumnExtend)(nil),   // 1: services.ColumnExtend
	(*TicketExtend)(nil),   // 2: services.TicketExtend
	(*VipExtend)(nil),      // 3: services.VipExtend
	(*RechargeExtend)(nil), // 4: services.RechargeExtend
	(*FoodExtend)(nil),     // 5: services.FoodExtend
	(*RoomExtend)(nil),     // 6: services.RoomExtend
}
var file_extendsService_proto_depIdxs = []int32{
	0, // 0: services.ColumnExtend.courses:type_name -> services.CourseExtend
	1, // 1: services.ColumnExtend.children:type_name -> services.ColumnExtend
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_extendsService_proto_init() }
func file_extendsService_proto_init() {
	if File_extendsService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_extendsService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseExtend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extendsService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnExtend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extendsService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TicketExtend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extendsService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipExtend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extendsService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RechargeExtend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extendsService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FoodExtend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_extendsService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomExtend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_extendsService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_extendsService_proto_goTypes,
		DependencyIndexes: file_extendsService_proto_depIdxs,
		MessageInfos:      file_extendsService_proto_msgTypes,
	}.Build()
	File_extendsService_proto = out.File
	file_extendsService_proto_rawDesc = nil
	file_extendsService_proto_goTypes = nil
	file_extendsService_proto_depIdxs = nil
}
