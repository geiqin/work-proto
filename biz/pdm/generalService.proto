syntax = "proto3";
package services;
option go_package = ".;services";
import "common/base.proto";
import "itemService.proto";

//普通商品
service GeneralService {
    //增加商品
    rpc Create (Item) returns (ItemResponse) {}
    //修改商品
    rpc Update (Item) returns (ItemResponse) {}
    //删除商品
    rpc Delete (GeneralRequest) returns (ItemResponse) {}
    //获得商品信息
    rpc Get (GeneralRequest) returns (ItemResponse) {}
    //商品详细信息（后台专用）
    rpc Detail (GeneralRequest) returns (ItemResponse) {}
    //商品规格详情
    rpc SkuDetail (GeneralRequest) returns (ItemResponse) {}
    //搜索商品（后台专用）
    rpc Search (GeneralRequest) returns (ItemResponse) {}
    //商品显示详情（前端专用）
    rpc Display (GeneralRequest) returns (ItemResponse) {}
    //搜索商品（前端专用）
    rpc FrontSearch (GeneralRequest) returns (ItemResponse) {}
}


message GeneralRequest {
    int32 paged =1;
    int32 page_size =2;
    string	sorting	=3;
    string	keywords =4;
    string	name =5;
    string	item_sn	=6;
    int32	brand_id =7;
    int32	tag_id	=8;
    int32	cat_id	=9;
    int64	taxonomy_id	=10;
    float	min_price =11;
    float	max_price =12;
    string type =13;
    string	status	=14;
    int64	coupon_id	=15;
    bool valid = 16;// 是否有效商品
    string invite = 17;// 加密后的邀请码
    int64	id	= 18;
    // @inject_tag: gorm:"-"
    int64 goods_sku_id =19; //(特殊专用)
    int64 sku_id = 20; //单一规格商品输入参数（在获取规格商品时使用）
    string cat_slug = 21;
    bool is_sku = 22;
    int32 sort = 23;
    int32	num	=24;
    // @inject_tag: gorm:"-"
    repeated int64 ids = 25;
}


