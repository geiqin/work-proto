// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: itemService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name             string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Unit             string  `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit"`
	ItemSn           string  `protobuf:"bytes,4,opt,name=item_sn,json=itemSn,proto3" json:"item_sn"`
	BrandId          int32   `protobuf:"varint,5,opt,name=brand_id,json=brandId,proto3" json:"brand_id"`
	TaxonomyId       int64   `protobuf:"varint,6,opt,name=taxonomy_id,json=taxonomyId,proto3" json:"taxonomy_id"`
	Type             string  `protobuf:"bytes,7,opt,name=type,proto3" json:"type"`
	BuyQuota         int32   `protobuf:"varint,8,opt,name=buy_quota,json=buyQuota,proto3" json:"buy_quota"`
	Quantity         int32   `protobuf:"varint,9,opt,name=quantity,proto3" json:"quantity"`
	IsSku            bool    `protobuf:"varint,10,opt,name=is_sku,json=isSku,proto3" json:"is_sku"`
	IsVirtual        bool    `protobuf:"varint,11,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual"`
	IsRight          bool    `protobuf:"varint,12,opt,name=is_right,json=isRight,proto3" json:"is_right"`
	IsPresale        bool    `protobuf:"varint,13,opt,name=is_presale,json=isPresale,proto3" json:"is_presale"`
	Listed           bool    `protobuf:"varint,14,opt,name=listed,proto3" json:"listed"`
	Locked           bool    `protobuf:"varint,15,opt,name=locked,proto3" json:"locked"`
	HideStock        bool    `protobuf:"varint,16,opt,name=hide_stock,json=hideStock,proto3" json:"hide_stock"`
	JoinVipDiscount  bool    `protobuf:"varint,17,opt,name=join_vip_discount,json=joinVipDiscount,proto3" json:"join_vip_discount"`
	JoinDistribution bool    `protobuf:"varint,18,opt,name=join_distribution,json=joinDistribution,proto3" json:"join_distribution"`
	OutItemNo        string  `protobuf:"bytes,19,opt,name=out_item_no,json=outItemNo,proto3" json:"out_item_no"`
	MinBuy           int32   `protobuf:"varint,20,opt,name=min_buy,json=minBuy,proto3" json:"min_buy"`
	ThumbId          int64   `protobuf:"varint,21,opt,name=thumb_id,json=thumbId,proto3" json:"thumb_id"`
	ThumbUrl         string  `protobuf:"bytes,22,opt,name=thumb_url,json=thumbUrl,proto3" json:"thumb_url"`
	VideoId          int64   `protobuf:"varint,23,opt,name=video_id,json=videoId,proto3" json:"video_id"`
	VideoUrl         string  `protobuf:"bytes,24,opt,name=video_url,json=videoUrl,proto3" json:"video_url"`
	TemplateId       int32   `protobuf:"varint,25,opt,name=template_id,json=templateId,proto3" json:"template_id"`
	Content          string  `protobuf:"bytes,26,opt,name=content,proto3" json:"content"`
	Memo             string  `protobuf:"bytes,27,opt,name=memo,proto3" json:"memo"`
	Barcode          string  `protobuf:"bytes,28,opt,name=barcode,proto3" json:"barcode"`
	Weight           float32 `protobuf:"fixed32,29,opt,name=weight,proto3" json:"weight"`
	Price            float32 `protobuf:"fixed32,30,opt,name=price,proto3" json:"price"`
	OriginPrice      float32 `protobuf:"fixed32,31,opt,name=origin_price,json=originPrice,proto3" json:"origin_price"`
	CostPrice        float32 `protobuf:"fixed32,32,opt,name=cost_price,json=costPrice,proto3" json:"cost_price"`
	MinPrice         float32 `protobuf:"fixed32,33,opt,name=min_price,json=minPrice,proto3" json:"min_price"`
	MaxPrice         float32 `protobuf:"fixed32,34,opt,name=max_price,json=maxPrice,proto3" json:"max_price"`
	Sorting          int32   `protobuf:"varint,35,opt,name=sorting,proto3" json:"sorting"`
	AutoListOnAt     string  `protobuf:"bytes,36,opt,name=auto_list_on_at,json=autoListOnAt,proto3" json:"auto_list_on_at"`
	AutoListOffAt    string  `protobuf:"bytes,37,opt,name=auto_list_off_at,json=autoListOffAt,proto3" json:"auto_list_off_at"`
	ListedAt         string  `protobuf:"bytes,38,opt,name=listed_at,json=listedAt,proto3" json:"listed_at"`
	CreatedAt        string  `protobuf:"bytes,39,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt        string  `protobuf:"bytes,40,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	//------end attrs---------
	Brand     *Brand         `protobuf:"bytes,41,opt,name=brand,proto3" json:"brand,omitempty"`
	Presale   *ItemPresale   `protobuf:"bytes,42,opt,name=presale,proto3" json:"presale,omitempty"`
	Counter   *ItemCounter   `protobuf:"bytes,43,opt,name=counter,proto3" json:"counter,omitempty"`
	Skus      []*Sku         `protobuf:"bytes,44,rep,name=skus,proto3" json:"skus,omitempty"`
	Galleries []*ItemGallery `protobuf:"bytes,45,rep,name=galleries,proto3" json:"galleries,omitempty"`
	Prices    []*ItemPrice   `protobuf:"bytes,46,rep,name=prices,proto3" json:"prices,omitempty"`
	Rights    []*ItemRight   `protobuf:"bytes,47,rep,name=rights,proto3" json:"rights,omitempty"`
	// @inject_tag: gorm:"many2many:item_cats;association_autoupdate:false"
	Cats []*Cat `protobuf:"bytes,48,rep,name=cats,proto3" gorm:"many2many:item_cats;association_autoupdate:false" json:"cats,omitempty"`
	// @inject_tag: gorm:"many2many:item_tags;"
	Tags []*Tag `protobuf:"bytes,49,rep,name=tags,proto3" gorm:"many2many:item_tags;" json:"tags,omitempty"`
	// @inject_tag: gorm:"many2many:spec_item_indices;"
	Specs []*Spec `protobuf:"bytes,50,rep,name=specs,proto3"  gorm:"many2many:spec_item_indices;" json:"specs,omitempty"` //(详情显示专用)
	// @inject_tag: gorm:"-"
	Additional *ItemAdditional `protobuf:"bytes,51,opt,name=additional,proto3" gorm:"-" json:"additional,omitempty"` //商品附加信息(显示专用)
	// @inject_tag: gorm:"-"
	GoodsSku *Sku `protobuf:"bytes,52,opt,name=goods_sku,json=goodsSku,proto3" gorm:"-" json:"goods_sku,omitempty"` //(特殊专用)
	// @inject_tag: gorm:"-"
	GoodsSkuId int64 `protobuf:"varint,53,opt,name=goods_sku_id,json=goodsSkuId,proto3" gorm:"-" json:"goods_sku_id,omitempty"` //(特殊专用)
	//------extends ------
	Recharge *RechargeExtend `protobuf:"bytes,56,opt,name=recharge,proto3" json:"recharge,omitempty"`
	Vip      *VipExtend      `protobuf:"bytes,57,opt,name=vip,proto3" json:"vip,omitempty"`
	Course   *CourseExtend   `protobuf:"bytes,58,opt,name=course,proto3" json:"course,omitempty"`
	Column   *ColumnExtend   `protobuf:"bytes,59,opt,name=column,proto3" json:"column,omitempty"`
	Food     *FoodExtend     `protobuf:"bytes,60,opt,name=food,proto3" json:"food,omitempty"`
	Room     *RoomExtend     `protobuf:"bytes,61,opt,name=room,proto3" json:"room,omitempty"`
	Ticket   *TicketExtend   `protobuf:"bytes,62,opt,name=ticket,proto3" json:"ticket,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_itemService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_itemService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_itemService_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Item) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *Item) GetItemSn() string {
	if x != nil {
		return x.ItemSn
	}
	return ""
}

func (x *Item) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *Item) GetTaxonomyId() int64 {
	if x != nil {
		return x.TaxonomyId
	}
	return 0
}

func (x *Item) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Item) GetBuyQuota() int32 {
	if x != nil {
		return x.BuyQuota
	}
	return 0
}

func (x *Item) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Item) GetIsSku() bool {
	if x != nil {
		return x.IsSku
	}
	return false
}

func (x *Item) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *Item) GetIsRight() bool {
	if x != nil {
		return x.IsRight
	}
	return false
}

func (x *Item) GetIsPresale() bool {
	if x != nil {
		return x.IsPresale
	}
	return false
}

func (x *Item) GetListed() bool {
	if x != nil {
		return x.Listed
	}
	return false
}

func (x *Item) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *Item) GetHideStock() bool {
	if x != nil {
		return x.HideStock
	}
	return false
}

func (x *Item) GetJoinVipDiscount() bool {
	if x != nil {
		return x.JoinVipDiscount
	}
	return false
}

func (x *Item) GetJoinDistribution() bool {
	if x != nil {
		return x.JoinDistribution
	}
	return false
}

func (x *Item) GetOutItemNo() string {
	if x != nil {
		return x.OutItemNo
	}
	return ""
}

func (x *Item) GetMinBuy() int32 {
	if x != nil {
		return x.MinBuy
	}
	return 0
}

func (x *Item) GetThumbId() int64 {
	if x != nil {
		return x.ThumbId
	}
	return 0
}

func (x *Item) GetThumbUrl() string {
	if x != nil {
		return x.ThumbUrl
	}
	return ""
}

func (x *Item) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *Item) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *Item) GetTemplateId() int32 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *Item) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Item) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *Item) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

func (x *Item) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Item) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Item) GetOriginPrice() float32 {
	if x != nil {
		return x.OriginPrice
	}
	return 0
}

func (x *Item) GetCostPrice() float32 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *Item) GetMinPrice() float32 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *Item) GetMaxPrice() float32 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *Item) GetSorting() int32 {
	if x != nil {
		return x.Sorting
	}
	return 0
}

func (x *Item) GetAutoListOnAt() string {
	if x != nil {
		return x.AutoListOnAt
	}
	return ""
}

func (x *Item) GetAutoListOffAt() string {
	if x != nil {
		return x.AutoListOffAt
	}
	return ""
}

func (x *Item) GetListedAt() string {
	if x != nil {
		return x.ListedAt
	}
	return ""
}

func (x *Item) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Item) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Item) GetBrand() *Brand {
	if x != nil {
		return x.Brand
	}
	return nil
}

func (x *Item) GetPresale() *ItemPresale {
	if x != nil {
		return x.Presale
	}
	return nil
}

func (x *Item) GetCounter() *ItemCounter {
	if x != nil {
		return x.Counter
	}
	return nil
}

func (x *Item) GetSkus() []*Sku {
	if x != nil {
		return x.Skus
	}
	return nil
}

func (x *Item) GetGalleries() []*ItemGallery {
	if x != nil {
		return x.Galleries
	}
	return nil
}

func (x *Item) GetPrices() []*ItemPrice {
	if x != nil {
		return x.Prices
	}
	return nil
}

func (x *Item) GetRights() []*ItemRight {
	if x != nil {
		return x.Rights
	}
	return nil
}

func (x *Item) GetCats() []*Cat {
	if x != nil {
		return x.Cats
	}
	return nil
}

func (x *Item) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Item) GetSpecs() []*Spec {
	if x != nil {
		return x.Specs
	}
	return nil
}

func (x *Item) GetAdditional() *ItemAdditional {
	if x != nil {
		return x.Additional
	}
	return nil
}

func (x *Item) GetGoodsSku() *Sku {
	if x != nil {
		return x.GoodsSku
	}
	return nil
}

func (x *Item) GetGoodsSkuId() int64 {
	if x != nil {
		return x.GoodsSkuId
	}
	return 0
}

func (x *Item) GetRecharge() *RechargeExtend {
	if x != nil {
		return x.Recharge
	}
	return nil
}

func (x *Item) GetVip() *VipExtend {
	if x != nil {
		return x.Vip
	}
	return nil
}

func (x *Item) GetCourse() *CourseExtend {
	if x != nil {
		return x.Course
	}
	return nil
}

func (x *Item) GetColumn() *ColumnExtend {
	if x != nil {
		return x.Column
	}
	return nil
}

func (x *Item) GetFood() *FoodExtend {
	if x != nil {
		return x.Food
	}
	return nil
}

func (x *Item) GetRoom() *RoomExtend {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *Item) GetTicket() *TicketExtend {
	if x != nil {
		return x.Ticket
	}
	return nil
}

//商品附加信息（显示专用）
type ItemAdditional struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsBuy              bool    `protobuf:"varint,1,opt,name=is_buy,json=isBuy,proto3" json:"is_buy,omitempty"`                                           // 商品是否可购买
	IsMember           bool    `protobuf:"varint,2,opt,name=is_member,json=isMember,proto3" json:"is_member,omitempty"`                                  // 当前用户是否为会员
	OnlyMemberBuy      bool    `protobuf:"varint,3,opt,name=only_member_buy,json=onlyMemberBuy,proto3" json:"only_member_buy,omitempty"`                 //只允许会员购买
	CurrentMemberPrice float32 `protobuf:"fixed32,4,opt,name=current_member_price,json=currentMemberPrice,proto3" json:"current_member_price,omitempty"` // 当前会员价
}

func (x *ItemAdditional) Reset() {
	*x = ItemAdditional{}
	if protoimpl.UnsafeEnabled {
		mi := &file_itemService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemAdditional) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemAdditional) ProtoMessage() {}

func (x *ItemAdditional) ProtoReflect() protoreflect.Message {
	mi := &file_itemService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemAdditional.ProtoReflect.Descriptor instead.
func (*ItemAdditional) Descriptor() ([]byte, []int) {
	return file_itemService_proto_rawDescGZIP(), []int{1}
}

func (x *ItemAdditional) GetIsBuy() bool {
	if x != nil {
		return x.IsBuy
	}
	return false
}

func (x *ItemAdditional) GetIsMember() bool {
	if x != nil {
		return x.IsMember
	}
	return false
}

func (x *ItemAdditional) GetOnlyMemberBuy() bool {
	if x != nil {
		return x.OnlyMemberBuy
	}
	return false
}

func (x *ItemAdditional) GetCurrentMemberPrice() float32 {
	if x != nil {
		return x.CurrentMemberPrice
	}
	return 0
}

type GoodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: gorm:"-"
	ItemIds []int64 `protobuf:"varint,1,rep,packed,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
	// @inject_tag: gorm:"-"
	SkuIds []int64 `protobuf:"varint,2,rep,packed,name=sku_ids,json=skuIds,proto3" json:"sku_ids,omitempty"`
}

func (x *GoodsRequest) Reset() {
	*x = GoodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_itemService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsRequest) ProtoMessage() {}

func (x *GoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_itemService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsRequest.ProtoReflect.Descriptor instead.
func (*GoodsRequest) Descriptor() ([]byte, []int) {
	return file_itemService_proto_rawDescGZIP(), []int{2}
}

func (x *GoodsRequest) GetItemIds() []int64 {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

func (x *GoodsRequest) GetSkuIds() []int64 {
	if x != nil {
		return x.SkuIds
	}
	return nil
}

type ItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged      int32   `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize   int32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorting    string  `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting,omitempty"`
	Keywords   string  `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords,omitempty"`
	Name       string  `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	ItemSn     string  `protobuf:"bytes,6,opt,name=item_sn,json=itemSn,proto3" json:"item_sn,omitempty"`
	BrandId    int32   `protobuf:"varint,7,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	TagId      int32   `protobuf:"varint,8,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	CatId      int32   `protobuf:"varint,9,opt,name=cat_id,json=catId,proto3" json:"cat_id,omitempty"`
	TaxonomyId int64   `protobuf:"varint,10,opt,name=taxonomy_id,json=taxonomyId,proto3" json:"taxonomy_id,omitempty"`
	MinPrice   float32 `protobuf:"fixed32,11,opt,name=min_price,json=minPrice,proto3" json:"min_price,omitempty"`
	MaxPrice   float32 `protobuf:"fixed32,12,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"`
	Type       string  `protobuf:"bytes,13,opt,name=type,proto3" json:"type,omitempty"`
	Status     string  `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	CouponId   int64   `protobuf:"varint,15,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`
	Valid      bool    `protobuf:"varint,16,opt,name=valid,proto3" json:"valid,omitempty"`  // 是否有效商品
	Invite     string  `protobuf:"bytes,17,opt,name=invite,proto3" json:"invite,omitempty"` // 加密后的邀请码
	Id         int64   `protobuf:"varint,18,opt,name=id,proto3" json:"id,omitempty"`
	GoodsSkuId int64   `protobuf:"varint,19,opt,name=goods_sku_id,json=goodsSkuId,proto3" json:"goods_sku_id,omitempty"` //(特殊专用)
	SkuId      int64   `protobuf:"varint,20,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`                  //单一规格商品输入参数（在获取规格商品时使用）
	CatSlug    string  `protobuf:"bytes,21,opt,name=cat_slug,json=catSlug,proto3" json:"cat_slug,omitempty"`
	IsSku      bool    `protobuf:"varint,22,opt,name=is_sku,json=isSku,proto3" json:"is_sku,omitempty"`
	Sort       int32   `protobuf:"varint,23,opt,name=sort,proto3" json:"sort,omitempty"`
	Num        int32   `protobuf:"varint,24,opt,name=num,proto3" json:"num,omitempty"`
	// @inject_tag: gorm:"-"
	Ids []int64 `protobuf:"varint,25,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ItemRequest) Reset() {
	*x = ItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_itemService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemRequest) ProtoMessage() {}

func (x *ItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_itemService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemRequest.ProtoReflect.Descriptor instead.
func (*ItemRequest) Descriptor() ([]byte, []int) {
	return file_itemService_proto_rawDescGZIP(), []int{3}
}

func (x *ItemRequest) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *ItemRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ItemRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *ItemRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *ItemRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ItemRequest) GetItemSn() string {
	if x != nil {
		return x.ItemSn
	}
	return ""
}

func (x *ItemRequest) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *ItemRequest) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *ItemRequest) GetCatId() int32 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *ItemRequest) GetTaxonomyId() int64 {
	if x != nil {
		return x.TaxonomyId
	}
	return 0
}

func (x *ItemRequest) GetMinPrice() float32 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *ItemRequest) GetMaxPrice() float32 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *ItemRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ItemRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ItemRequest) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *ItemRequest) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *ItemRequest) GetInvite() string {
	if x != nil {
		return x.Invite
	}
	return ""
}

func (x *ItemRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ItemRequest) GetGoodsSkuId() int64 {
	if x != nil {
		return x.GoodsSkuId
	}
	return 0
}

func (x *ItemRequest) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *ItemRequest) GetCatSlug() string {
	if x != nil {
		return x.CatSlug
	}
	return ""
}

func (x *ItemRequest) GetIsSku() bool {
	if x != nil {
		return x.IsSku
	}
	return false
}

func (x *ItemRequest) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ItemRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *ItemRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type MemberGoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId         int64   `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	SkuId          int64   `protobuf:"varint,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	MinMemberPrice float32 `protobuf:"fixed32,3,opt,name=min_member_price,json=minMemberPrice,proto3" json:"min_member_price,omitempty"`
	MaxMemberPrice float32 `protobuf:"fixed32,4,opt,name=max_member_price,json=maxMemberPrice,proto3" json:"max_member_price,omitempty"`
	Discount       float32 `protobuf:"fixed32,5,opt,name=discount,proto3" json:"discount,omitempty"`
}

func (x *MemberGoods) Reset() {
	*x = MemberGoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_itemService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberGoods) ProtoMessage() {}

func (x *MemberGoods) ProtoReflect() protoreflect.Message {
	mi := &file_itemService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberGoods.ProtoReflect.Descriptor instead.
func (*MemberGoods) Descriptor() ([]byte, []int) {
	return file_itemService_proto_rawDescGZIP(), []int{4}
}

func (x *MemberGoods) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *MemberGoods) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *MemberGoods) GetMinMemberPrice() float32 {
	if x != nil {
		return x.MinMemberPrice
	}
	return 0
}

func (x *MemberGoods) GetMaxMemberPrice() float32 {
	if x != nil {
		return x.MaxMemberPrice
	}
	return 0
}

func (x *MemberGoods) GetDiscount() float32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

type ItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Item         `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items  []*Item       `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Error  *common.Error `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Info   *common.Info  `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *ItemResponse) Reset() {
	*x = ItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_itemService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemResponse) ProtoMessage() {}

func (x *ItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_itemService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemResponse.ProtoReflect.Descriptor instead.
func (*ItemResponse) Descriptor() ([]byte, []int) {
	return file_itemService_proto_rawDescGZIP(), []int{5}
}

func (x *ItemResponse) GetEntity() *Item {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *ItemResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ItemResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ItemResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ItemResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_itemService_proto protoreflect.FileDescriptor

var file_itemService_proto_rawDesc = []byte{
	0x0a, 0x11, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x69, 0x74, 0x65, 0x6d, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x69, 0x74, 0x65, 0x6d,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x16, 0x69, 0x74, 0x65, 0x6d, 0x52, 0x69, 0x67, 0x68, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x74, 0x61, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x10, 0x73, 0x6b, 0x75, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x10, 0x63, 0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x65,
	0x73, 0x61, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x14, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe9, 0x0f, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e,
	0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x61, 0x78,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x75, 0x79, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x62, 0x75, 0x79, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x73, 0x6b, 0x75, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x53, 0x6b, 0x75, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x73,
	0x61, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x65,
	0x73, 0x61, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x69, 0x64, 0x65, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x11, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x76, 0x69, 0x70, 0x5f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x6a, 0x6f, 0x69, 0x6e, 0x56, 0x69, 0x70, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2b, 0x0a, 0x11, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6a, 0x6f, 0x69, 0x6e,
	0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0b,
	0x6f, 0x75, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x6f, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x12, 0x17, 0x0a, 0x07,
	0x6d, 0x69, 0x6e, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d,
	0x69, 0x6e, 0x42, 0x75, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a,
	0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x25, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x6f, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x75, 0x74,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x6e, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x10, 0x61, 0x75, 0x74,
	0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x61, 0x74, 0x18, 0x25, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x66,
	0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x27, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a,
	0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x05, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x18,
	0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72,
	0x65, 0x73, 0x61, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x2c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x6b, 0x75, 0x52, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x67, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x2d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x61, 0x6c, 0x6c,
	0x65, 0x72, 0x79, 0x52, 0x09, 0x67, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2b,
	0x0a, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x18, 0x2e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x18, 0x2f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x06, 0x72, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x63, 0x61, 0x74, 0x73,
	0x18, 0x30, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x61, 0x74, 0x52, 0x04, 0x63, 0x61, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x31, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x24,
	0x0a, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73, 0x18, 0x32, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x73,
	0x70, 0x65, 0x63, 0x73, 0x12, 0x38, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x52, 0x0a, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x2a,
	0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x6b, 0x75, 0x18, 0x34, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x6b, 0x75,
	0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x6b, 0x75, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x35, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x08,
	0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x08, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x12, 0x25, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x69, 0x70, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x66, 0x6f, 0x6f,
	0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x46, 0x6f, 0x6f, 0x64, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x04, 0x66,
	0x6f, 0x6f, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x3d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x6f,
	0x6d, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12, 0x2e, 0x0a,
	0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x9e, 0x01,
	0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x69, 0x73, 0x42, 0x75, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6f,
	0x6e, 0x6c, 0x79, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x75, 0x79, 0x12, 0x30, 0x0a, 0x14,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x42,
	0x0a, 0x0c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x75,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6b, 0x75, 0x49,
	0x64, 0x73, 0x22, 0xf1, 0x04, 0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x53, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x61,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x6b, 0x75,
	0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x61, 0x74, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x73, 0x6b,
	0x75, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x53, 0x6b, 0x75, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x0c, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x32, 0xc1, 0x01, 0x0a, 0x0d, 0x4d, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36,
	0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x53, 0x6f, 0x6c,
	0x64, 0x4e, 0x75, 0x6d, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xd5, 0x06, 0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x37, 0x0a, 0x04, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x06, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3c, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b,
	0x0a, 0x08, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x07, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x15,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3d, 0x0a, 0x09, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37,
	0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x73, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x15, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a,
	0x0a, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_itemService_proto_rawDescOnce sync.Once
	file_itemService_proto_rawDescData = file_itemService_proto_rawDesc
)

func file_itemService_proto_rawDescGZIP() []byte {
	file_itemService_proto_rawDescOnce.Do(func() {
		file_itemService_proto_rawDescData = protoimpl.X.CompressGZIP(file_itemService_proto_rawDescData)
	})
	return file_itemService_proto_rawDescData
}

var file_itemService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_itemService_proto_goTypes = []interface{}{
	(*Item)(nil),           // 0: services.Item
	(*ItemAdditional)(nil), // 1: services.ItemAdditional
	(*GoodsRequest)(nil),   // 2: services.GoodsRequest
	(*ItemRequest)(nil),    // 3: services.ItemRequest
	(*MemberGoods)(nil),    // 4: services.MemberGoods
	(*ItemResponse)(nil),   // 5: services.ItemResponse
	(*Brand)(nil),          // 6: services.Brand
	(*ItemPresale)(nil),    // 7: services.ItemPresale
	(*ItemCounter)(nil),    // 8: services.ItemCounter
	(*Sku)(nil),            // 9: services.Sku
	(*ItemGallery)(nil),    // 10: services.ItemGallery
	(*ItemPrice)(nil),      // 11: services.ItemPrice
	(*ItemRight)(nil),      // 12: services.ItemRight
	(*Cat)(nil),            // 13: services.Cat
	(*Tag)(nil),            // 14: services.Tag
	(*Spec)(nil),           // 15: services.Spec
	(*RechargeExtend)(nil), // 16: services.RechargeExtend
	(*VipExtend)(nil),      // 17: services.VipExtend
	(*CourseExtend)(nil),   // 18: services.CourseExtend
	(*ColumnExtend)(nil),   // 19: services.ColumnExtend
	(*FoodExtend)(nil),     // 20: services.FoodExtend
	(*RoomExtend)(nil),     // 21: services.RoomExtend
	(*TicketExtend)(nil),   // 22: services.TicketExtend
	(*common.Pager)(nil),   // 23: common.Pager
	(*common.Error)(nil),   // 24: common.Error
	(*common.Info)(nil),    // 25: common.Info
}
var file_itemService_proto_depIdxs = []int32{
	6,  // 0: services.Item.brand:type_name -> services.Brand
	7,  // 1: services.Item.presale:type_name -> services.ItemPresale
	8,  // 2: services.Item.counter:type_name -> services.ItemCounter
	9,  // 3: services.Item.skus:type_name -> services.Sku
	10, // 4: services.Item.galleries:type_name -> services.ItemGallery
	11, // 5: services.Item.prices:type_name -> services.ItemPrice
	12, // 6: services.Item.rights:type_name -> services.ItemRight
	13, // 7: services.Item.cats:type_name -> services.Cat
	14, // 8: services.Item.tags:type_name -> services.Tag
	15, // 9: services.Item.specs:type_name -> services.Spec
	1,  // 10: services.Item.additional:type_name -> services.ItemAdditional
	9,  // 11: services.Item.goods_sku:type_name -> services.Sku
	16, // 12: services.Item.recharge:type_name -> services.RechargeExtend
	17, // 13: services.Item.vip:type_name -> services.VipExtend
	18, // 14: services.Item.course:type_name -> services.CourseExtend
	19, // 15: services.Item.column:type_name -> services.ColumnExtend
	20, // 16: services.Item.food:type_name -> services.FoodExtend
	21, // 17: services.Item.room:type_name -> services.RoomExtend
	22, // 18: services.Item.ticket:type_name -> services.TicketExtend
	0,  // 19: services.ItemResponse.entity:type_name -> services.Item
	23, // 20: services.ItemResponse.pager:type_name -> common.Pager
	0,  // 21: services.ItemResponse.items:type_name -> services.Item
	24, // 22: services.ItemResponse.error:type_name -> common.Error
	25, // 23: services.ItemResponse.info:type_name -> common.Info
	3,  // 24: services.MyItemService.Search:input_type -> services.ItemRequest
	3,  // 25: services.MyItemService.Get:input_type -> services.ItemRequest
	3,  // 26: services.MyItemService.AddSoldNum:input_type -> services.ItemRequest
	3,  // 27: services.ItemService.Delete:input_type -> services.ItemRequest
	3,  // 28: services.ItemService.Lock:input_type -> services.ItemRequest
	3,  // 29: services.ItemService.Unlock:input_type -> services.ItemRequest
	3,  // 30: services.ItemService.Listing:input_type -> services.ItemRequest
	3,  // 31: services.ItemService.Delisting:input_type -> services.ItemRequest
	3,  // 32: services.ItemService.Recovery:input_type -> services.ItemRequest
	3,  // 33: services.ItemService.Destroy:input_type -> services.ItemRequest
	3,  // 34: services.ItemService.Get:input_type -> services.ItemRequest
	2,  // 35: services.ItemService.GoodsList:input_type -> services.GoodsRequest
	3,  // 36: services.ItemService.List:input_type -> services.ItemRequest
	3,  // 37: services.ItemService.Search:input_type -> services.ItemRequest
	3,  // 38: services.ItemService.SearchDeleted:input_type -> services.ItemRequest
	3,  // 39: services.ItemService.DeleteByIds:input_type -> services.ItemRequest
	3,  // 40: services.ItemService.Sort:input_type -> services.ItemRequest
	5,  // 41: services.MyItemService.Search:output_type -> services.ItemResponse
	5,  // 42: services.MyItemService.Get:output_type -> services.ItemResponse
	5,  // 43: services.MyItemService.AddSoldNum:output_type -> services.ItemResponse
	5,  // 44: services.ItemService.Delete:output_type -> services.ItemResponse
	5,  // 45: services.ItemService.Lock:output_type -> services.ItemResponse
	5,  // 46: services.ItemService.Unlock:output_type -> services.ItemResponse
	5,  // 47: services.ItemService.Listing:output_type -> services.ItemResponse
	5,  // 48: services.ItemService.Delisting:output_type -> services.ItemResponse
	5,  // 49: services.ItemService.Recovery:output_type -> services.ItemResponse
	5,  // 50: services.ItemService.Destroy:output_type -> services.ItemResponse
	5,  // 51: services.ItemService.Get:output_type -> services.ItemResponse
	5,  // 52: services.ItemService.GoodsList:output_type -> services.ItemResponse
	5,  // 53: services.ItemService.List:output_type -> services.ItemResponse
	5,  // 54: services.ItemService.Search:output_type -> services.ItemResponse
	5,  // 55: services.ItemService.SearchDeleted:output_type -> services.ItemResponse
	5,  // 56: services.ItemService.DeleteByIds:output_type -> services.ItemResponse
	5,  // 57: services.ItemService.Sort:output_type -> services.ItemResponse
	41, // [41:58] is the sub-list for method output_type
	24, // [24:41] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_itemService_proto_init() }
func file_itemService_proto_init() {
	if File_itemService_proto != nil {
		return
	}
	file_itemGalleryService_proto_init()
	file_itemPriceService_proto_init()
	file_itemRightService_proto_init()
	file_tagService_proto_init()
	file_brandService_proto_init()
	file_skuService_proto_init()
	file_catService_proto_init()
	file_specService_proto_init()
	file_itemPresaleService_proto_init()
	file_extendsService_proto_init()
	file_itemCounterService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_itemService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_itemService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemAdditional); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_itemService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_itemService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_itemService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberGoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_itemService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_itemService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_itemService_proto_goTypes,
		DependencyIndexes: file_itemService_proto_depIdxs,
		MessageInfos:      file_itemService_proto_msgTypes,
	}.Build()
	File_itemService_proto = out.File
	file_itemService_proto_rawDesc = nil
	file_itemService_proto_goTypes = nil
	file_itemService_proto_depIdxs = nil
}
