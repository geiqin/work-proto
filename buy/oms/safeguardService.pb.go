// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: safeguardService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Safeguard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	OrderId            int64              `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	Type               string             `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`
	SafeguardSn        string             `protobuf:"bytes,4,opt,name=safeguard_sn,json=safeguardSn,proto3" json:"safeguard_sn"`
	CustomerId         int64              `protobuf:"varint,5,opt,name=customer_id,json=customerId,proto3" json:"customer_id"`
	ExchangeDeliveryId int64              `protobuf:"varint,6,opt,name=exchange_delivery_id,json=exchangeDeliveryId,proto3" json:"exchange_delivery_id"`
	ExpressName        string             `protobuf:"bytes,7,opt,name=express_name,json=expressName,proto3" json:"express_name"`
	ExpressNo          string             `protobuf:"bytes,8,opt,name=express_no,json=expressNo,proto3" json:"express_no"`
	ExpressCode        string             `protobuf:"bytes,9,opt,name=express_code,json=expressCode,proto3" json:"express_code"`
	Mobile             string             `protobuf:"bytes,10,opt,name=mobile,proto3" json:"mobile"`
	Refunded           bool               `protobuf:"varint,11,opt,name=refunded,proto3" json:"refunded"`
	RefundFee          float32            `protobuf:"fixed32,12,opt,name=refund_fee,json=refundFee,proto3" json:"refund_fee"`
	RefundMethod       string             `protobuf:"bytes,13,opt,name=refund_method,json=refundMethod,proto3" json:"refund_method"`
	CheckStatus        string             `protobuf:"bytes,142,opt,name=check_status,json=checkStatus,proto3" json:"check_status"`
	Status             string             `protobuf:"bytes,15,opt,name=status,proto3" json:"status"`
	Reason             string             `protobuf:"bytes,16,opt,name=reason,proto3" json:"reason"`
	Description        string             `protobuf:"bytes,17,opt,name=description,proto3" json:"description"`
	OpId               int64              `protobuf:"varint,18,opt,name=op_id,json=opId,proto3" json:"op_id"`
	OpName             string             `protobuf:"bytes,19,opt,name=op_name,json=opName,proto3" json:"op_name"`
	Memo               string             `protobuf:"bytes,20,opt,name=memo,proto3" json:"memo"`
	GoodsStatus        string             `protobuf:"bytes,21,opt,name=goods_status,json=goodsStatus,proto3" json:"goods_status"`
	RefundedAt         string             `protobuf:"bytes,22,opt,name=refunded_at,json=refundedAt,proto3" json:"refunded_at"`
	Metadata           string             `protobuf:"bytes,23,opt,name=metadata,proto3" json:"metadata"`
	CheckedAt          string             `protobuf:"bytes,24,opt,name=checked_at,json=checkedAt,proto3" json:"checked_at"`
	CreatedAt          string             `protobuf:"bytes,25,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt          string             `protobuf:"bytes,26,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Details            []*SafeguardDetail `protobuf:"bytes,27,rep,name=details,proto3" json:"details"`
	Images             []*SafeguardImage  `protobuf:"bytes,28,rep,name=images,proto3" json:"images"`
	// @inject_tag: gorm:"-"
	Address *SafeguardAddress `protobuf:"bytes,29,opt,name=address,proto3" json:"address" gorm:"-"` // 维权收货人地址
	// @inject_tag: gorm:"-"
	ReturnExpress *SafeguardReturnExpress `protobuf:"bytes,30,opt,name=return_express,json=returnExpress,proto3" json:"return_express" gorm:"-"` // 买家退货填写的退货物流信息
	Order         *Order                  `protobuf:"bytes,31,opt,name=order,proto3" json:"order"`
	ReturnPoints  int32                   `protobuf:"varint,32,opt,name=return_points,json=returnPoints,proto3" json:"return_points"`
	DeductPoints  int32                   `protobuf:"varint,33,opt,name=deduct_points,json=deductPoints,proto3" json:"deduct_points"`
	DeductMoney   float32                 `protobuf:"fixed32,34,opt,name=deduct_money,json=deductMoney,proto3" json:"deduct_money"`
	PointsRate    int32                   `protobuf:"varint,35,opt,name=points_rate,json=pointsRate,proto3" json:"points_rate"`
}

func (x *Safeguard) Reset() {
	*x = Safeguard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Safeguard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Safeguard) ProtoMessage() {}

func (x *Safeguard) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Safeguard.ProtoReflect.Descriptor instead.
func (*Safeguard) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{0}
}

func (x *Safeguard) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Safeguard) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *Safeguard) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Safeguard) GetSafeguardSn() string {
	if x != nil {
		return x.SafeguardSn
	}
	return ""
}

func (x *Safeguard) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *Safeguard) GetExchangeDeliveryId() int64 {
	if x != nil {
		return x.ExchangeDeliveryId
	}
	return 0
}

func (x *Safeguard) GetExpressName() string {
	if x != nil {
		return x.ExpressName
	}
	return ""
}

func (x *Safeguard) GetExpressNo() string {
	if x != nil {
		return x.ExpressNo
	}
	return ""
}

func (x *Safeguard) GetExpressCode() string {
	if x != nil {
		return x.ExpressCode
	}
	return ""
}

func (x *Safeguard) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *Safeguard) GetRefunded() bool {
	if x != nil {
		return x.Refunded
	}
	return false
}

func (x *Safeguard) GetRefundFee() float32 {
	if x != nil {
		return x.RefundFee
	}
	return 0
}

func (x *Safeguard) GetRefundMethod() string {
	if x != nil {
		return x.RefundMethod
	}
	return ""
}

func (x *Safeguard) GetCheckStatus() string {
	if x != nil {
		return x.CheckStatus
	}
	return ""
}

func (x *Safeguard) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Safeguard) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Safeguard) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Safeguard) GetOpId() int64 {
	if x != nil {
		return x.OpId
	}
	return 0
}

func (x *Safeguard) GetOpName() string {
	if x != nil {
		return x.OpName
	}
	return ""
}

func (x *Safeguard) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *Safeguard) GetGoodsStatus() string {
	if x != nil {
		return x.GoodsStatus
	}
	return ""
}

func (x *Safeguard) GetRefundedAt() string {
	if x != nil {
		return x.RefundedAt
	}
	return ""
}

func (x *Safeguard) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *Safeguard) GetCheckedAt() string {
	if x != nil {
		return x.CheckedAt
	}
	return ""
}

func (x *Safeguard) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Safeguard) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Safeguard) GetDetails() []*SafeguardDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Safeguard) GetImages() []*SafeguardImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Safeguard) GetAddress() *SafeguardAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Safeguard) GetReturnExpress() *SafeguardReturnExpress {
	if x != nil {
		return x.ReturnExpress
	}
	return nil
}

func (x *Safeguard) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *Safeguard) GetReturnPoints() int32 {
	if x != nil {
		return x.ReturnPoints
	}
	return 0
}

func (x *Safeguard) GetDeductPoints() int32 {
	if x != nil {
		return x.DeductPoints
	}
	return 0
}

func (x *Safeguard) GetDeductMoney() float32 {
	if x != nil {
		return x.DeductMoney
	}
	return 0
}

func (x *Safeguard) GetPointsRate() int32 {
	if x != nil {
		return x.PointsRate
	}
	return 0
}

type SafeguardDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	SafeguardId   int64 `protobuf:"varint,2,opt,name=safeguard_id,json=safeguardId,proto3" json:"safeguard_id"`
	OrderDetailId int64 `protobuf:"varint,3,opt,name=order_detail_id,json=orderDetailId,proto3" json:"order_detail_id"`
	ItemId        int64 `protobuf:"varint,4,opt,name=item_id,json=itemId,proto3" json:"item_id"`
	SkuId         int64 `protobuf:"varint,5,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	Num           int32 `protobuf:"varint,6,opt,name=num,proto3" json:"num"`
	// @inject_tag: gorm:"-"
	Detail *OrderDetail `protobuf:"bytes,7,opt,name=detail,proto3" json:"detail" gorm:"-"`
}

func (x *SafeguardDetail) Reset() {
	*x = SafeguardDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardDetail) ProtoMessage() {}

func (x *SafeguardDetail) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardDetail.ProtoReflect.Descriptor instead.
func (*SafeguardDetail) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{1}
}

func (x *SafeguardDetail) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SafeguardDetail) GetSafeguardId() int64 {
	if x != nil {
		return x.SafeguardId
	}
	return 0
}

func (x *SafeguardDetail) GetOrderDetailId() int64 {
	if x != nil {
		return x.OrderDetailId
	}
	return 0
}

func (x *SafeguardDetail) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *SafeguardDetail) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SafeguardDetail) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *SafeguardDetail) GetDetail() *OrderDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type SafeguardImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	SafeguardId int64  `protobuf:"varint,2,opt,name=safeguard_id,json=safeguardId,proto3" json:"safeguard_id"`
	ImageId     int64  `protobuf:"varint,3,opt,name=image_id,json=imageId,proto3" json:"image_id"`
	ImageUrl    string `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
}

func (x *SafeguardImage) Reset() {
	*x = SafeguardImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardImage) ProtoMessage() {}

func (x *SafeguardImage) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardImage.ProtoReflect.Descriptor instead.
func (*SafeguardImage) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{2}
}

func (x *SafeguardImage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SafeguardImage) GetSafeguardId() int64 {
	if x != nil {
		return x.SafeguardId
	}
	return 0
}

func (x *SafeguardImage) GetImageId() int64 {
	if x != nil {
		return x.ImageId
	}
	return 0
}

func (x *SafeguardImage) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

// 维权收货人地址
type SafeguardAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	AreaId int64  `protobuf:"varint,2,opt,name=area_id,json=areaId,proto3" json:"area_id"`
	Addr   string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr"`
	Mobile string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile"`
	// @inject_tag: gorm:"-"
	Area *AreaInfo `protobuf:"bytes,5,opt,name=area,proto3" json:"area" gorm:"-"`
}

func (x *SafeguardAddress) Reset() {
	*x = SafeguardAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardAddress) ProtoMessage() {}

func (x *SafeguardAddress) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardAddress.ProtoReflect.Descriptor instead.
func (*SafeguardAddress) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{3}
}

func (x *SafeguardAddress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SafeguardAddress) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *SafeguardAddress) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *SafeguardAddress) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SafeguardAddress) GetArea() *AreaInfo {
	if x != nil {
		return x.Area
	}
	return nil
}

// 买家退货填写的退货物流信息
type SafeguardReturnExpress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpressName string `protobuf:"bytes,1,opt,name=express_name,json=expressName,proto3" json:"express_name"`
	ExpressNo   string `protobuf:"bytes,2,opt,name=express_no,json=expressNo,proto3" json:"express_no"`
	ExpressCode string `protobuf:"bytes,3,opt,name=express_code,json=expressCode,proto3" json:"express_code"`
	Mobile      string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile"`
	// @inject_tag: gorm:"-"
	Images []*SafeguardImage `protobuf:"bytes,5,rep,name=images,proto3" json:"images" gorm:"-"`
}

func (x *SafeguardReturnExpress) Reset() {
	*x = SafeguardReturnExpress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardReturnExpress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardReturnExpress) ProtoMessage() {}

func (x *SafeguardReturnExpress) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardReturnExpress.ProtoReflect.Descriptor instead.
func (*SafeguardReturnExpress) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{4}
}

func (x *SafeguardReturnExpress) GetExpressName() string {
	if x != nil {
		return x.ExpressName
	}
	return ""
}

func (x *SafeguardReturnExpress) GetExpressNo() string {
	if x != nil {
		return x.ExpressNo
	}
	return ""
}

func (x *SafeguardReturnExpress) GetExpressCode() string {
	if x != nil {
		return x.ExpressCode
	}
	return ""
}

func (x *SafeguardReturnExpress) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SafeguardReturnExpress) GetImages() []*SafeguardImage {
	if x != nil {
		return x.Images
	}
	return nil
}

type SafeguardMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: gorm:"-"
	Address *SafeguardAddress `protobuf:"bytes,1,opt,name=address,proto3" json:"address" gorm:"-"`
	// @inject_tag: gorm:"-"
	ReturnExpress *SafeguardReturnExpress `protobuf:"bytes,2,opt,name=return_express,json=returnExpress,proto3" json:"return_express" gorm:"-"`
}

func (x *SafeguardMetadata) Reset() {
	*x = SafeguardMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardMetadata) ProtoMessage() {}

func (x *SafeguardMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardMetadata.ProtoReflect.Descriptor instead.
func (*SafeguardMetadata) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{5}
}

func (x *SafeguardMetadata) GetAddress() *SafeguardAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SafeguardMetadata) GetReturnExpress() *SafeguardReturnExpress {
	if x != nil {
		return x.ReturnExpress
	}
	return nil
}

type SafeguardWhere struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int32  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Sorting  string `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting"`
	Id       int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	// @inject_tag: gorm:"-"
	Ids           []int64 `protobuf:"varint,5,rep,packed,name=ids,proto3" json:"ids" gorm:"-"`
	OrderId       int64   `protobuf:"varint,6,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	CustomerId    int64   `protobuf:"varint,7,opt,name=customer_id,json=customerId,proto3" json:"customer_id"`
	Type          string  `protobuf:"bytes,8,opt,name=type,proto3" json:"type"`
	KeywordsType  string  `protobuf:"bytes,9,opt,name=keywords_type,json=keywordsType,proto3" json:"keywords_type"`
	Keywords      string  `protobuf:"bytes,10,opt,name=keywords,proto3" json:"keywords"`
	OrderDetailId int64   `protobuf:"varint,11,opt,name=order_detail_id,json=orderDetailId,proto3" json:"order_detail_id"`
	// @inject_tag: gorm:"-"
	OrderDetailIds []int64 `protobuf:"varint,12,rep,packed,name=order_detail_ids,json=orderDetailIds,proto3" json:"order_detail_ids" gorm:"-"`
	Status         string  `protobuf:"bytes,13,opt,name=status,proto3" json:"status"`
	SafeguardSn    string  `protobuf:"bytes,14,opt,name=safeguard_sn,json=safeguardSn,proto3" json:"safeguard_sn"`
}

func (x *SafeguardWhere) Reset() {
	*x = SafeguardWhere{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardWhere) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardWhere) ProtoMessage() {}

func (x *SafeguardWhere) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardWhere.ProtoReflect.Descriptor instead.
func (*SafeguardWhere) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{6}
}

func (x *SafeguardWhere) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *SafeguardWhere) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SafeguardWhere) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *SafeguardWhere) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SafeguardWhere) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SafeguardWhere) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SafeguardWhere) GetCustomerId() int64 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

func (x *SafeguardWhere) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SafeguardWhere) GetKeywordsType() string {
	if x != nil {
		return x.KeywordsType
	}
	return ""
}

func (x *SafeguardWhere) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *SafeguardWhere) GetOrderDetailId() int64 {
	if x != nil {
		return x.OrderDetailId
	}
	return 0
}

func (x *SafeguardWhere) GetOrderDetailIds() []int64 {
	if x != nil {
		return x.OrderDetailIds
	}
	return nil
}

func (x *SafeguardWhere) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SafeguardWhere) GetSafeguardSn() string {
	if x != nil {
		return x.SafeguardSn
	}
	return ""
}

type SafeguardType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId        int64   `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	IsRefund       bool    `protobuf:"varint,2,opt,name=is_refund,json=isRefund,proto3" json:"is_refund"`                      // 是否可退款（仅退款）
	IsReturn       bool    `protobuf:"varint,3,opt,name=is_return,json=isReturn,proto3" json:"is_return"`                      // 是否可退货（退货退款）
	IsExchange     bool    `protobuf:"varint,4,opt,name=is_exchange,json=isExchange,proto3" json:"is_exchange"`                // 是否可换货
	IsRepair       bool    `protobuf:"varint,5,opt,name=is_repair,json=isRepair,proto3" json:"is_repair"`                      // 是否可补发货
	MaxRefundPrice float32 `protobuf:"fixed32,6,opt,name=max_refund_price,json=maxRefundPrice,proto3" json:"max_refund_price"` // 最大退款金额
	ExpressFee     float32 `protobuf:"fixed32,7,opt,name=express_fee,json=expressFee,proto3" json:"express_fee"`               // 运费
	// @inject_tag: gorm:"-"
	Address *SafeguardAddress `protobuf:"bytes,8,opt,name=address,proto3" json:"address" gorm:"-"` // 维权收货人地址
	// @inject_tag: gorm:"-"
	Details []*OrderDetail `protobuf:"bytes,9,rep,name=details,proto3" json:"details" gorm:"-"`
}

func (x *SafeguardType) Reset() {
	*x = SafeguardType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardType) ProtoMessage() {}

func (x *SafeguardType) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardType.ProtoReflect.Descriptor instead.
func (*SafeguardType) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{7}
}

func (x *SafeguardType) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SafeguardType) GetIsRefund() bool {
	if x != nil {
		return x.IsRefund
	}
	return false
}

func (x *SafeguardType) GetIsReturn() bool {
	if x != nil {
		return x.IsReturn
	}
	return false
}

func (x *SafeguardType) GetIsExchange() bool {
	if x != nil {
		return x.IsExchange
	}
	return false
}

func (x *SafeguardType) GetIsRepair() bool {
	if x != nil {
		return x.IsRepair
	}
	return false
}

func (x *SafeguardType) GetMaxRefundPrice() float32 {
	if x != nil {
		return x.MaxRefundPrice
	}
	return 0
}

func (x *SafeguardType) GetExpressFee() float32 {
	if x != nil {
		return x.ExpressFee
	}
	return 0
}

func (x *SafeguardType) GetAddress() *SafeguardAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SafeguardType) GetDetails() []*OrderDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

type SafeguardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Safeguard    `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*Safeguard  `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Error  *common.Error `protobuf:"bytes,4,opt,name=error,proto3" json:"error"`
	Info   *common.Info  `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *SafeguardResponse) Reset() {
	*x = SafeguardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardResponse) ProtoMessage() {}

func (x *SafeguardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardResponse.ProtoReflect.Descriptor instead.
func (*SafeguardResponse) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{8}
}

func (x *SafeguardResponse) GetEntity() *Safeguard {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *SafeguardResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *SafeguardResponse) GetItems() []*Safeguard {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SafeguardResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SafeguardResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type SafeguardTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *SafeguardType   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager    `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*SafeguardType `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Error  *common.Error    `protobuf:"bytes,4,opt,name=error,proto3" json:"error"`
	Info   *common.Info     `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *SafeguardTypeResponse) Reset() {
	*x = SafeguardTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardTypeResponse) ProtoMessage() {}

func (x *SafeguardTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardTypeResponse.ProtoReflect.Descriptor instead.
func (*SafeguardTypeResponse) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{9}
}

func (x *SafeguardTypeResponse) GetEntity() *SafeguardType {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *SafeguardTypeResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *SafeguardTypeResponse) GetItems() []*SafeguardType {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SafeguardTypeResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SafeguardTypeResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_safeguardService_proto protoreflect.FileDescriptor

var file_safeguardService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x61, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x09, 0x0a, 0x09, 0x53,
	0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x61, 0x66, 0x65, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x12,
	0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x46, 0x65, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x8e, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x13, 0x0a, 0x05, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65,
	0x6d, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x33, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x1c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x47, 0x0a, 0x0e,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x22, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x64, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x61, 0x74, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x0f, 0x53,
	0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x2d, 0x0a, 0x06, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x7b, 0x0a, 0x0e, 0x53, 0x61,
	0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x93, 0x01, 0x0a, 0x10, 0x53, 0x61, 0x66, 0x65,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x22, 0xc7, 0x01,
	0x0a, 0x16, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x11, 0x53, 0x61, 0x66, 0x65,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x47, 0x0a, 0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x22, 0x9d, 0x03, 0x0a,
	0x0e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x57, 0x68, 0x65, 0x72, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x61, 0x66,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x22, 0xd4, 0x02, 0x0a,
	0x0d, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x61, 0x69,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x52, 0x65, 0x70, 0x61, 0x69,
	0x72, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x6d, 0x61, 0x78,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x12, 0x34, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x11, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xe3, 0x01,
	0x0a, 0x15, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2d, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x23, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x32, 0x8b, 0x06, 0x0a, 0x12, 0x4d, 0x79, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x1a, 0x1b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a,
	0x0b, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x13, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x70, 0x61, 0x69, 0x72, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x57, 0x68, 0x65, 0x72,
	0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x46, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64,
	0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x57, 0x68, 0x65, 0x72,
	0x65, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x07, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41,
	0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x57, 0x68, 0x65,
	0x72, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61,
	0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x32, 0x94, 0x03, 0x0a, 0x10, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x41, 0x67, 0x72, 0x65, 0x65, 0x64,
	0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x07, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x12,
	0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x06, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x13, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61,
	0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x57, 0x68, 0x65,
	0x72, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61,
	0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x42, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_safeguardService_proto_rawDescOnce sync.Once
	file_safeguardService_proto_rawDescData = file_safeguardService_proto_rawDesc
)

func file_safeguardService_proto_rawDescGZIP() []byte {
	file_safeguardService_proto_rawDescOnce.Do(func() {
		file_safeguardService_proto_rawDescData = protoimpl.X.CompressGZIP(file_safeguardService_proto_rawDescData)
	})
	return file_safeguardService_proto_rawDescData
}

var file_safeguardService_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_safeguardService_proto_goTypes = []interface{}{
	(*Safeguard)(nil),              // 0: services.Safeguard
	(*SafeguardDetail)(nil),        // 1: services.SafeguardDetail
	(*SafeguardImage)(nil),         // 2: services.SafeguardImage
	(*SafeguardAddress)(nil),       // 3: services.SafeguardAddress
	(*SafeguardReturnExpress)(nil), // 4: services.SafeguardReturnExpress
	(*SafeguardMetadata)(nil),      // 5: services.SafeguardMetadata
	(*SafeguardWhere)(nil),         // 6: services.SafeguardWhere
	(*SafeguardType)(nil),          // 7: services.SafeguardType
	(*SafeguardResponse)(nil),      // 8: services.SafeguardResponse
	(*SafeguardTypeResponse)(nil),  // 9: services.SafeguardTypeResponse
	(*Order)(nil),                  // 10: services.Order
	(*OrderDetail)(nil),            // 11: services.OrderDetail
	(*AreaInfo)(nil),               // 12: services.AreaInfo
	(*common.Pager)(nil),           // 13: common.Pager
	(*common.Error)(nil),           // 14: common.Error
	(*common.Info)(nil),            // 15: common.Info
}
var file_safeguardService_proto_depIdxs = []int32{
	1,  // 0: services.Safeguard.details:type_name -> services.SafeguardDetail
	2,  // 1: services.Safeguard.images:type_name -> services.SafeguardImage
	3,  // 2: services.Safeguard.address:type_name -> services.SafeguardAddress
	4,  // 3: services.Safeguard.return_express:type_name -> services.SafeguardReturnExpress
	10, // 4: services.Safeguard.order:type_name -> services.Order
	11, // 5: services.SafeguardDetail.detail:type_name -> services.OrderDetail
	12, // 6: services.SafeguardAddress.area:type_name -> services.AreaInfo
	2,  // 7: services.SafeguardReturnExpress.images:type_name -> services.SafeguardImage
	3,  // 8: services.SafeguardMetadata.address:type_name -> services.SafeguardAddress
	4,  // 9: services.SafeguardMetadata.return_express:type_name -> services.SafeguardReturnExpress
	3,  // 10: services.SafeguardType.address:type_name -> services.SafeguardAddress
	11, // 11: services.SafeguardType.details:type_name -> services.OrderDetail
	0,  // 12: services.SafeguardResponse.entity:type_name -> services.Safeguard
	13, // 13: services.SafeguardResponse.pager:type_name -> common.Pager
	0,  // 14: services.SafeguardResponse.items:type_name -> services.Safeguard
	14, // 15: services.SafeguardResponse.error:type_name -> common.Error
	15, // 16: services.SafeguardResponse.info:type_name -> common.Info
	7,  // 17: services.SafeguardTypeResponse.entity:type_name -> services.SafeguardType
	13, // 18: services.SafeguardTypeResponse.pager:type_name -> common.Pager
	7,  // 19: services.SafeguardTypeResponse.items:type_name -> services.SafeguardType
	14, // 20: services.SafeguardTypeResponse.error:type_name -> common.Error
	15, // 21: services.SafeguardTypeResponse.info:type_name -> common.Info
	0,  // 22: services.MySafeguardService.ApplyRefund:input_type -> services.Safeguard
	0,  // 23: services.MySafeguardService.ApplyReturn:input_type -> services.Safeguard
	0,  // 24: services.MySafeguardService.ApplyExchange:input_type -> services.Safeguard
	0,  // 25: services.MySafeguardService.ApplyRepair:input_type -> services.Safeguard
	6,  // 26: services.MySafeguardService.ApplyCancel:input_type -> services.SafeguardWhere
	6,  // 27: services.MySafeguardService.GetType:input_type -> services.SafeguardWhere
	6,  // 28: services.MySafeguardService.ConfirmType:input_type -> services.SafeguardWhere
	0,  // 29: services.MySafeguardService.ExpressConfirm:input_type -> services.Safeguard
	6,  // 30: services.MySafeguardService.Get:input_type -> services.SafeguardWhere
	6,  // 31: services.MySafeguardService.Display:input_type -> services.SafeguardWhere
	6,  // 32: services.MySafeguardService.Search:input_type -> services.SafeguardWhere
	0,  // 33: services.SafeguardService.Agreed:input_type -> services.Safeguard
	0,  // 34: services.SafeguardService.Refused:input_type -> services.Safeguard
	0,  // 35: services.SafeguardService.Refund:input_type -> services.Safeguard
	6,  // 36: services.SafeguardService.Get:input_type -> services.SafeguardWhere
	6,  // 37: services.SafeguardService.Display:input_type -> services.SafeguardWhere
	6,  // 38: services.SafeguardService.Search:input_type -> services.SafeguardWhere
	8,  // 39: services.MySafeguardService.ApplyRefund:output_type -> services.SafeguardResponse
	8,  // 40: services.MySafeguardService.ApplyReturn:output_type -> services.SafeguardResponse
	8,  // 41: services.MySafeguardService.ApplyExchange:output_type -> services.SafeguardResponse
	8,  // 42: services.MySafeguardService.ApplyRepair:output_type -> services.SafeguardResponse
	8,  // 43: services.MySafeguardService.ApplyCancel:output_type -> services.SafeguardResponse
	9,  // 44: services.MySafeguardService.GetType:output_type -> services.SafeguardTypeResponse
	9,  // 45: services.MySafeguardService.ConfirmType:output_type -> services.SafeguardTypeResponse
	8,  // 46: services.MySafeguardService.ExpressConfirm:output_type -> services.SafeguardResponse
	8,  // 47: services.MySafeguardService.Get:output_type -> services.SafeguardResponse
	8,  // 48: services.MySafeguardService.Display:output_type -> services.SafeguardResponse
	8,  // 49: services.MySafeguardService.Search:output_type -> services.SafeguardResponse
	8,  // 50: services.SafeguardService.Agreed:output_type -> services.SafeguardResponse
	8,  // 51: services.SafeguardService.Refused:output_type -> services.SafeguardResponse
	8,  // 52: services.SafeguardService.Refund:output_type -> services.SafeguardResponse
	8,  // 53: services.SafeguardService.Get:output_type -> services.SafeguardResponse
	8,  // 54: services.SafeguardService.Display:output_type -> services.SafeguardResponse
	8,  // 55: services.SafeguardService.Search:output_type -> services.SafeguardResponse
	39, // [39:56] is the sub-list for method output_type
	22, // [22:39] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_safeguardService_proto_init() }
func file_safeguardService_proto_init() {
	if File_safeguardService_proto != nil {
		return
	}
	file_orderService_proto_init()
	file_orderDetailService_proto_init()
	file_areaInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_safeguardService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Safeguard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardReturnExpress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardWhere); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_safeguardService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_safeguardService_proto_goTypes,
		DependencyIndexes: file_safeguardService_proto_depIdxs,
		MessageInfos:      file_safeguardService_proto_msgTypes,
	}.Build()
	File_safeguardService_proto = out.File
	file_safeguardService_proto_rawDesc = nil
	file_safeguardService_proto_goTypes = nil
	file_safeguardService_proto_depIdxs = nil
}
