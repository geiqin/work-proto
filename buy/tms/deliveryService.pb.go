// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: deliveryService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DeliveryWhere struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int32  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Sorting  string `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting"`
	Keywords string `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Id       int64  `protobuf:"varint,5,opt,name=id,proto3" json:"id"`
	// @inject_tag: gorm:"-"
	Ids []int64 `protobuf:"varint,6,rep,packed,name=ids,proto3" json:"ids" gorm:"-"`
}

func (x *DeliveryWhere) Reset() {
	*x = DeliveryWhere{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deliveryService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryWhere) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryWhere) ProtoMessage() {}

func (x *DeliveryWhere) ProtoReflect() protoreflect.Message {
	mi := &file_deliveryService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryWhere.ProtoReflect.Descriptor instead.
func (*DeliveryWhere) Descriptor() ([]byte, []int) {
	return file_deliveryService_proto_rawDescGZIP(), []int{0}
}

func (x *DeliveryWhere) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *DeliveryWhere) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DeliveryWhere) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *DeliveryWhere) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *DeliveryWhere) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeliveryWhere) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Delivery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	LocationId int64 `protobuf:"varint,3,opt,name=location_id,json=locationId,proto3" json:"location_id"`
	Method     int32 `protobuf:"varint,4,opt,name=method,proto3" json:"method"`
	// @inject_tag: gorm:"-"
	MethodArr           []int32 `protobuf:"varint,31,rep,packed,name=method_arr,json=methodArr,proto3" json:"method_arr" gorm:"-"`
	Template            int32   `protobuf:"varint,5,opt,name=template,proto3" json:"template"`
	RangeName           string  `protobuf:"bytes,6,opt,name=range_name,json=rangeName,proto3" json:"range_name"`
	RangeContent        string  `protobuf:"bytes,7,opt,name=range_content,json=rangeContent,proto3" json:"range_content"`
	RangeImageUrl       string  `protobuf:"bytes,8,opt,name=range_image_url,json=rangeImageUrl,proto3" json:"range_image_url"`
	RangeStartPrice     float32 `protobuf:"fixed32,9,opt,name=range_start_price,json=rangeStartPrice,proto3" json:"range_start_price"`
	RangeFee            float32 `protobuf:"fixed32,10,opt,name=range_fee,json=rangeFee,proto3" json:"range_fee"`
	Standard            int32   `protobuf:"varint,11,opt,name=standard,proto3" json:"standard"`
	FirstKm             float32 `protobuf:"fixed32,12,opt,name=first_km,json=firstKm,proto3" json:"first_km"`
	FirstKmFee          float32 `protobuf:"fixed32,13,opt,name=first_km_fee,json=firstKmFee,proto3" json:"first_km_fee"`
	AdditionalKm        float32 `protobuf:"fixed32,14,opt,name=additional_km,json=additionalKm,proto3" json:"additional_km"`
	AdditionalKmFee     float32 `protobuf:"fixed32,15,opt,name=additional_km_fee,json=additionalKmFee,proto3" json:"additional_km_fee"`
	FirstWeight         float32 `protobuf:"fixed32,16,opt,name=first_weight,json=firstWeight,proto3" json:"first_weight"`
	AdditionalWeight    float32 `protobuf:"fixed32,17,opt,name=additional_weight,json=additionalWeight,proto3" json:"additional_weight"`
	AdditionalWeightFee float32 `protobuf:"fixed32,18,opt,name=additional_weight_fee,json=additionalWeightFee,proto3" json:"additional_weight_fee"`
	IsTimedArrival      bool    `protobuf:"varint,19,opt,name=is_timed_arrival,json=isTimedArrival,proto3" json:"is_timed_arrival"`
	Delivery            string  `protobuf:"bytes,20,opt,name=delivery,proto3" json:"delivery"`
	DeliveryRepeatWeeks int32   `protobuf:"varint,21,opt,name=delivery_repeat_weeks,json=deliveryRepeatWeeks,proto3" json:"delivery_repeat_weeks"`
	// @inject_tag: gorm:"-"
	DeliveryRepeatWeekArr []int32 `protobuf:"varint,22,rep,packed,name=delivery_repeat_week_arr,json=deliveryRepeatWeekArr,proto3" json:"delivery_repeat_week_arr" gorm:"-"`
	SubDeliveryTime       string  `protobuf:"bytes,23,opt,name=sub_delivery_time,json=subDeliveryTime,proto3" json:"sub_delivery_time"`
	Appointment           string  `protobuf:"bytes,24,opt,name=appointment,proto3" json:"appointment"`
	AppointmentNum        int32   `protobuf:"varint,25,opt,name=appointment_num,json=appointmentNum,proto3" json:"appointment_num"`
	MaxAppointmentNum     int32   `protobuf:"varint,26,opt,name=max_appointment_num,json=maxAppointmentNum,proto3" json:"max_appointment_num"`
	CreatedAt             string  `protobuf:"bytes,27,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt             string  `protobuf:"bytes,28,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	// @inject_tag: gorm:"-"
	DeliveryTimes []*Times         `protobuf:"bytes,29,rep,name=delivery_times,json=deliveryTimes,proto3" json:"delivery_times" gorm:"-"`
	Ranges        []*DeliveryRange `protobuf:"bytes,30,rep,name=ranges,proto3" json:"ranges"`
}

func (x *Delivery) Reset() {
	*x = Delivery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deliveryService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Delivery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delivery) ProtoMessage() {}

func (x *Delivery) ProtoReflect() protoreflect.Message {
	mi := &file_deliveryService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delivery.ProtoReflect.Descriptor instead.
func (*Delivery) Descriptor() ([]byte, []int) {
	return file_deliveryService_proto_rawDescGZIP(), []int{1}
}

func (x *Delivery) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Delivery) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *Delivery) GetMethod() int32 {
	if x != nil {
		return x.Method
	}
	return 0
}

func (x *Delivery) GetMethodArr() []int32 {
	if x != nil {
		return x.MethodArr
	}
	return nil
}

func (x *Delivery) GetTemplate() int32 {
	if x != nil {
		return x.Template
	}
	return 0
}

func (x *Delivery) GetRangeName() string {
	if x != nil {
		return x.RangeName
	}
	return ""
}

func (x *Delivery) GetRangeContent() string {
	if x != nil {
		return x.RangeContent
	}
	return ""
}

func (x *Delivery) GetRangeImageUrl() string {
	if x != nil {
		return x.RangeImageUrl
	}
	return ""
}

func (x *Delivery) GetRangeStartPrice() float32 {
	if x != nil {
		return x.RangeStartPrice
	}
	return 0
}

func (x *Delivery) GetRangeFee() float32 {
	if x != nil {
		return x.RangeFee
	}
	return 0
}

func (x *Delivery) GetStandard() int32 {
	if x != nil {
		return x.Standard
	}
	return 0
}

func (x *Delivery) GetFirstKm() float32 {
	if x != nil {
		return x.FirstKm
	}
	return 0
}

func (x *Delivery) GetFirstKmFee() float32 {
	if x != nil {
		return x.FirstKmFee
	}
	return 0
}

func (x *Delivery) GetAdditionalKm() float32 {
	if x != nil {
		return x.AdditionalKm
	}
	return 0
}

func (x *Delivery) GetAdditionalKmFee() float32 {
	if x != nil {
		return x.AdditionalKmFee
	}
	return 0
}

func (x *Delivery) GetFirstWeight() float32 {
	if x != nil {
		return x.FirstWeight
	}
	return 0
}

func (x *Delivery) GetAdditionalWeight() float32 {
	if x != nil {
		return x.AdditionalWeight
	}
	return 0
}

func (x *Delivery) GetAdditionalWeightFee() float32 {
	if x != nil {
		return x.AdditionalWeightFee
	}
	return 0
}

func (x *Delivery) GetIsTimedArrival() bool {
	if x != nil {
		return x.IsTimedArrival
	}
	return false
}

func (x *Delivery) GetDelivery() string {
	if x != nil {
		return x.Delivery
	}
	return ""
}

func (x *Delivery) GetDeliveryRepeatWeeks() int32 {
	if x != nil {
		return x.DeliveryRepeatWeeks
	}
	return 0
}

func (x *Delivery) GetDeliveryRepeatWeekArr() []int32 {
	if x != nil {
		return x.DeliveryRepeatWeekArr
	}
	return nil
}

func (x *Delivery) GetSubDeliveryTime() string {
	if x != nil {
		return x.SubDeliveryTime
	}
	return ""
}

func (x *Delivery) GetAppointment() string {
	if x != nil {
		return x.Appointment
	}
	return ""
}

func (x *Delivery) GetAppointmentNum() int32 {
	if x != nil {
		return x.AppointmentNum
	}
	return 0
}

func (x *Delivery) GetMaxAppointmentNum() int32 {
	if x != nil {
		return x.MaxAppointmentNum
	}
	return 0
}

func (x *Delivery) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Delivery) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Delivery) GetDeliveryTimes() []*Times {
	if x != nil {
		return x.DeliveryTimes
	}
	return nil
}

func (x *Delivery) GetRanges() []*DeliveryRange {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type DeliveryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Delivery     `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*Delivery   `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Error  *common.Error `protobuf:"bytes,4,opt,name=error,proto3" json:"error"`
	Info   *common.Info  `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *DeliveryResponse) Reset() {
	*x = DeliveryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deliveryService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryResponse) ProtoMessage() {}

func (x *DeliveryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deliveryService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryResponse.ProtoReflect.Descriptor instead.
func (*DeliveryResponse) Descriptor() ([]byte, []int) {
	return file_deliveryService_proto_rawDescGZIP(), []int{2}
}

func (x *DeliveryResponse) GetEntity() *Delivery {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *DeliveryResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *DeliveryResponse) GetItems() []*Delivery {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DeliveryResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *DeliveryResponse) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_deliveryService_proto protoreflect.FileDescriptor

var file_deliveryService_proto_rawDesc = []byte{
	0x0a, 0x15, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x57, 0x68, 0x65, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xf2, 0x08, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x18, 0x1f, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x09, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x41, 0x72, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x6b, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x4b, 0x6d, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6b, 0x6d,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4b, 0x6d, 0x46, 0x65, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6b, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4b, 0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6b, 0x6d, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x4b, 0x6d, 0x46, 0x65, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x46, 0x65, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69,
	0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x64, 0x41, 0x72,
	0x72, 0x69, 0x76, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x12, 0x32, 0x0a, 0x15, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x72, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x57, 0x65, 0x65, 0x6b, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x5f, 0x61, 0x72,
	0x72, 0x18, 0x16, 0x20, 0x03, 0x28, 0x05, 0x52, 0x15, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x41, 0x72, 0x72, 0x12, 0x2a,
	0x0a, 0x11, 0x73, 0x75, 0x62, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x36, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x1d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x52, 0x0d, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0xd4, 0x01, 0x0a,
	0x10, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x23, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x32, 0xb3, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x43, 0x66, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x4f, 0x70,
	0x65, 0x6e, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x33,
	0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x06, 0x49, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xc9, 0x01, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a,
	0x03, 0x47, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x57, 0x68, 0x65, 0x72, 0x65, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_deliveryService_proto_rawDescOnce sync.Once
	file_deliveryService_proto_rawDescData = file_deliveryService_proto_rawDesc
)

func file_deliveryService_proto_rawDescGZIP() []byte {
	file_deliveryService_proto_rawDescOnce.Do(func() {
		file_deliveryService_proto_rawDescData = protoimpl.X.CompressGZIP(file_deliveryService_proto_rawDescData)
	})
	return file_deliveryService_proto_rawDescData
}

var file_deliveryService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_deliveryService_proto_goTypes = []interface{}{
	(*DeliveryWhere)(nil),    // 0: services.DeliveryWhere
	(*Delivery)(nil),         // 1: services.Delivery
	(*DeliveryResponse)(nil), // 2: services.DeliveryResponse
	(*Times)(nil),            // 3: services.Times
	(*DeliveryRange)(nil),    // 4: services.DeliveryRange
	(*common.Pager)(nil),     // 5: common.Pager
	(*common.Error)(nil),     // 6: common.Error
	(*common.Info)(nil),      // 7: common.Info
	(*common.Empty)(nil),     // 8: common.Empty
	(*SettingResponse)(nil),  // 9: services.SettingResponse
	(*DateListResponse)(nil), // 10: services.DateListResponse
}
var file_deliveryService_proto_depIdxs = []int32{
	3,  // 0: services.Delivery.delivery_times:type_name -> services.Times
	4,  // 1: services.Delivery.ranges:type_name -> services.DeliveryRange
	1,  // 2: services.DeliveryResponse.entity:type_name -> services.Delivery
	5,  // 3: services.DeliveryResponse.pager:type_name -> common.Pager
	1,  // 4: services.DeliveryResponse.items:type_name -> services.Delivery
	6,  // 5: services.DeliveryResponse.error:type_name -> common.Error
	7,  // 6: services.DeliveryResponse.info:type_name -> common.Info
	8,  // 7: services.DeliveryCfgService.Open:input_type -> common.Empty
	8,  // 8: services.DeliveryCfgService.Close:input_type -> common.Empty
	8,  // 9: services.DeliveryCfgService.IsOpen:input_type -> common.Empty
	1,  // 10: services.DeliveryService.Get:input_type -> services.Delivery
	1,  // 11: services.DeliveryService.Update:input_type -> services.Delivery
	0,  // 12: services.DeliveryService.GetTimes:input_type -> services.DeliveryWhere
	9,  // 13: services.DeliveryCfgService.Open:output_type -> services.SettingResponse
	9,  // 14: services.DeliveryCfgService.Close:output_type -> services.SettingResponse
	9,  // 15: services.DeliveryCfgService.IsOpen:output_type -> services.SettingResponse
	2,  // 16: services.DeliveryService.Get:output_type -> services.DeliveryResponse
	2,  // 17: services.DeliveryService.Update:output_type -> services.DeliveryResponse
	10, // 18: services.DeliveryService.GetTimes:output_type -> services.DateListResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_deliveryService_proto_init() }
func file_deliveryService_proto_init() {
	if File_deliveryService_proto != nil {
		return
	}
	file_settingService_proto_init()
	file_timesService_proto_init()
	file_deliveryRangeService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_deliveryService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryWhere); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deliveryService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Delivery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deliveryService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_deliveryService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_deliveryService_proto_goTypes,
		DependencyIndexes: file_deliveryService_proto_depIdxs,
		MessageInfos:      file_deliveryService_proto_msgTypes,
	}.Build()
	File_deliveryService_proto = out.File
	file_deliveryService_proto_rawDesc = nil
	file_deliveryService_proto_goTypes = nil
	file_deliveryService_proto_depIdxs = nil
}
