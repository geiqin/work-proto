syntax = "proto3";
package services;
option go_package = ".;services";
import "common/base.proto";
import "settingService.proto";

service ExpressCfgService {
  // 启用快递发货功能
  rpc Open (common.Empty) returns (SettingResponse) {}
  // 关闭快递发货功能
  rpc Close (common.Empty) returns (SettingResponse) {}
  // 检查快递发货功能是否开启
  rpc IsOpen (common.Empty) returns (SettingResponse) {}
  // 获取快递发货配置
  rpc Get (common.Empty) returns (SettingResponse) {}
  // 修改运费模板计费方式
  rpc Update (Setting) returns (SettingResponse) {}
}

service ExpressService {
  rpc Create (Express) returns (ExpressResponse) {}
  rpc Update (Express) returns (ExpressResponse) {}
  rpc Copy (ExpressWhere) returns (ExpressResponse) {}
  rpc Delete (ExpressWhere) returns (ExpressResponse) {}
  rpc Search (ExpressWhere) returns (ExpressResponse) {}
  rpc List (ExpressWhere) returns (ExpressResponse) {}
  rpc Get (Express) returns (ExpressResponse) {}
  // 设置默认使用模板
  rpc Defaulted (ExpressWhere) returns (ExpressResponse) {}
  // 获取默认使用的模板
  rpc GetDefault (common.Empty) returns (ExpressResponse) {}
}

message ExpressWhere {
  int32 paged = 1;
  int32 page_size = 2;
  string sorting = 3;
  string keywords = 4;
  int64 id = 5;
  // @inject_tag: gorm:"-"
  repeated int64 ids = 6;
  int64 express_id = 7;
  // @inject_tag: gorm:"-"
  repeated int64 express_ids = 8;
}

message Express {
  int64 id = 1;
  string name = 2;
  int32 charging_method = 3;
  bool defaulted = 4;
  string created_at = 5;
  string updated_at = 6;
  repeated ExpressDetail details = 7;
}

message ExpressDetail {
  int64 id = 1;
  int64 express_id = 2;
  float first_weight = 3;
  int32 first_number = 4;
  float express_fee = 5;
  float additional_weight = 6;
  int32 additional_number = 7;
  float additional_fee = 8;
  string created_at = 9;
  string updated_at = 10;
  string area_content = 11;
  repeated ExpressArea areas = 12;
}

message ExpressArea {
  int64 id = 1;
  int64 express_detail_id = 2;
  int64 area_id = 3;
  string created_at = 4;
  string updated_at = 5;
}

message ExpressResponse {
  Express entity = 1;
  common.Pager pager = 2;
  repeated Express items = 3;
  common.Error error = 4;
  common.Info info = 5;
}