// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: advertRouterService.proto

package services

import (
	fmt "fmt"
	_ "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for AdvertRouterService service

func NewAdvertRouterServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for AdvertRouterService service

type AdvertRouterService interface {
	List(ctx context.Context, in *AdvertRouter, opts ...client.CallOption) (*AdvertRouterResponse, error)
}

type advertRouterService struct {
	c    client.Client
	name string
}

func NewAdvertRouterService(name string, c client.Client) AdvertRouterService {
	return &advertRouterService{
		c:    c,
		name: name,
	}
}

func (c *advertRouterService) List(ctx context.Context, in *AdvertRouter, opts ...client.CallOption) (*AdvertRouterResponse, error) {
	req := c.c.NewRequest(c.name, "AdvertRouterService.List", in)
	out := new(AdvertRouterResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AdvertRouterService service

type AdvertRouterServiceHandler interface {
	List(context.Context, *AdvertRouter, *AdvertRouterResponse) error
}

func RegisterAdvertRouterServiceHandler(s server.Server, hdlr AdvertRouterServiceHandler, opts ...server.HandlerOption) error {
	type advertRouterService interface {
		List(ctx context.Context, in *AdvertRouter, out *AdvertRouterResponse) error
	}
	type AdvertRouterService struct {
		advertRouterService
	}
	h := &advertRouterServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&AdvertRouterService{h}, opts...))
}

type advertRouterServiceHandler struct {
	AdvertRouterServiceHandler
}

func (h *advertRouterServiceHandler) List(ctx context.Context, in *AdvertRouter, out *AdvertRouterResponse) error {
	return h.AdvertRouterServiceHandler.List(ctx, in, out)
}
