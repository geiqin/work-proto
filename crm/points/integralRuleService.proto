syntax = "proto3";
package services;
option go_package = ".;services";
import "common/base.proto";
import "goodsInfoService.proto";

service IntegralRuleService {
    rpc Create (IntegralRule) returns (IntegralRuleResponse) {}
    rpc Update (IntegralRule) returns (IntegralRuleResponse) {}
    rpc Delete (IntegralRuleWhere) returns (IntegralRuleResponse) {}
    rpc Search (IntegralRuleWhere) returns (IntegralRuleResponse) {}
    rpc Get (IntegralRuleWhere) returns (IntegralRuleResponse) {}
}

message IntegralRuleWhere {
    int32 paged = 1;
    int32 page_size = 2;
    string sorting = 3;
    string keywords = 4;
    int64 id = 5;
    // @inject_tag: gorm:"-"
    repeated int64 ids = 6;
}

message IntegralRule {
    int64 id = 1;
    int32 points = 2;
    int32 receive_type = 3;
    int32 deal_count = 4;
    float deal_amount = 5;
    int32 goods_type = 6;
    string created_at = 7;
    string updated_at = 8;
    repeated IntegralGoods goods = 9;
}

message IntegralGoods {
    int64 id = 1;
    int64 item_id = 2;
    int64 sku_id = 3;
    int32 value = 4;
    int32 ratio = 5;
    int64 integral_rule_id = 6;
    string created_at = 7;
    string updated_at = 8;
    // @inject_tag: gorm:"-"
    GoodsInfo goods = 9;
}

message IntegralRuleResponse {
    IntegralRule entity = 1;
    common.Pager pager = 2;
    repeated IntegralRule items = 3;
    common.Error error = 4;
    common.Info info = 5;
}
